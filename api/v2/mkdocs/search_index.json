{
    "docs": [
        {
            "location": "/", 
            "text": "Index", 
            "title": "Home"
        }, 
        {
            "location": "/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/recomputations/", 
            "text": "Recomputations Requests\n\n\nAPI Calls for listing existing and creating new recomputation requests\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Recomputation Requests\n\n\nThis method can be used to retrieve a list of current Recomputation requests.\n\n\n Description\n\n\n\n\n\n\nPOST: Create a new recomputation request\n\n\nThis method can be used to insert a new recomputation request onto the Compute Engine.\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n[GET]: List Recomputation Requests\n\n\nThis method can be used to retrieve a list of current Recomputation requests.\n\n\nInput\n\n\n/recomputations\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n\nroot\n: [\n     {\n          \nrequester_name\n: \nArya Stark\n,\n          \nrequester_email\n: \nastark@shadowguild.com\n,\n          \nreason\n: \npower cuts\n,\n          \nstart_time\n: \n2015-01-10T12:00:00Z\n,\n          \nend_time\n: \n2015-01-30T23:00:00Z\n,\n          \nreport\n: \nEGI_Critical\n,\n          \nexclude\n: [\n           \nGluster\n\n          ],\n          \nstatus\n: \nrunning\n,\n          \ntimestamp\n: \n2015-02-01 14:58:40\n\n     }\n ]\n}\n\n\n\n\nXml Response\n\n\nroot\n\n    \nResult\n\n        \nrequester_name\nArya Stark\n/requester_name\n\n        \nrequester_email\nastark@shadowguild.com\n/requester_email\n\n        \nreason\npower cuts\n/reason\n\n        \nstart_time\n2015-01-10T12:00:00Z\n/start_time\n\n        \nend_time\n2015-01-30T23:00:00Z\n/end_time\n\n        \nreport\nEGI_Critical\n/report\n\n        \nexclude\nGluster\n/exclude\n\n        \nstatus\nrunning\n/status\n\n        \ntimestamp\n2015-02-01 14:58:40\n/timestamp\n\n    \n/Result\n\n\n/root\n\n\n\n\n\n\n\n[POST]: Create a new recomputation request\n\n\nThis method can be used to insert a new recomputation request onto the Compute Engine.\n\n\nInput\n\n\n/recomputations\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nAccept: application/json\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nstart_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\nend_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\nreason\n\n\nExplain the need for a recomputation\n\n\nYES\n\n\n\n\n\n\n\n\nreport\n\n\nReport for which the recomputation is requested\n\n\nYES\n\n\n\n\n\n\n\n\nexclude\n\n\nGroups to be excluded from recomputation. If more than one group are to be excluded use the parameter as many times as needed within the same API call\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK", 
            "title": "Recomputations Requests"
        }, 
        {
            "location": "/recomputations/#recomputations-requests", 
            "text": "API Calls for listing existing and creating new recomputation requests     Name  Description  Shortcut      GET: List Recomputation Requests  This method can be used to retrieve a list of current Recomputation requests.   Description    POST: Create a new recomputation request  This method can be used to insert a new recomputation request onto the Compute Engine.   Description", 
            "title": "Recomputations Requests"
        }, 
        {
            "location": "/recomputations/#get-list-recomputation-requests", 
            "text": "This method can be used to retrieve a list of current Recomputation requests.  Input  /recomputations  Request headers  x-api-key: shared_key_value\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  { root : [\n     {\n           requester_name :  Arya Stark ,\n           requester_email :  astark@shadowguild.com ,\n           reason :  power cuts ,\n           start_time :  2015-01-10T12:00:00Z ,\n           end_time :  2015-01-30T23:00:00Z ,\n           report :  EGI_Critical ,\n           exclude : [\n            Gluster \n          ],\n           status :  running ,\n           timestamp :  2015-02-01 14:58:40 \n     }\n ]\n}  Xml Response  root \n     Result \n         requester_name Arya Stark /requester_name \n         requester_email astark@shadowguild.com /requester_email \n         reason power cuts /reason \n         start_time 2015-01-10T12:00:00Z /start_time \n         end_time 2015-01-30T23:00:00Z /end_time \n         report EGI_Critical /report \n         exclude Gluster /exclude \n         status running /status \n         timestamp 2015-02-01 14:58:40 /timestamp \n     /Result  /root", 
            "title": "[GET]: List Recomputation Requests"
        }, 
        {
            "location": "/recomputations/#post-create-a-new-recomputation-request", 
            "text": "This method can be used to insert a new recomputation request onto the Compute Engine.  Input  /recomputations  Request headers  x-api-key: shared_key_value\nAccept: application/json  Parameters     Type  Description  Required  Default value      start_time  UTC time in W3C format  YES     end_time  UTC time in W3C format  YES     reason  Explain the need for a recomputation  YES     report  Report for which the recomputation is requested  YES     exclude  Groups to be excluded from recomputation. If more than one group are to be excluded use the parameter as many times as needed within the same API call  NO      Response  Headers:  Status: 200 OK", 
            "title": "[POST]: Create a new recomputation request"
        }, 
        {
            "location": "/results/", 
            "text": "Results\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Availability and Reliability results for a group of endpoint groups\n\n\nThis method retrieves the results of a specified group of endpoint group or multiple groups of endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity.\n\n\nDescription\n\n\n\n\n\n\nGET: List Availability and Reliability results for an endpoint group\n\n\nThis method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity.\n\n\nDescription\n\n\n\n\n\n\nGET: List Availability and Reliability results for a Service Flavor\n\n\nThis method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity.\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n[GET]: List Availabilities and Reliabilities for groups of Endpoint Groups\n\n\nThe following methods can be used to obtain a tenant's Availability and Reliability result metrics per Group of Endpoint Groups. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity (\nmonthly\n or \ndaily\n) for retrieved results and also format using the \nAccept\n header. Depending on the form of the request the user can request a single group of endpoint groups results or a bulk of group of endpoint groups results filtered by their type.\n\n\n[GET] Group of Endpoint groups\n\n\nInput\n\n\n/results/{report_name}/{group_type}?[start_time]\n[end_time]\n[granularity]\nor\n/results/{report_name}/{group_type}/{group_name}?[start_time]\n[end_time]\n[granularity]\n\n\n\n\nQuery Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n[start_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n[end_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n[granularity]\n\n\nGranularity of time that will be used to present data. Possible values are \nmonthly\n or \ndaily\n\n\nNO\n\n\ndaily\n\n\n\n\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n{report_name}\n\n\nName of the report that contains all the information about the profile, filter tags, group types etc.\n\n\nYES\n\n\n\n\n\n\n\n\n{group_type}\n\n\nType of the Group of Endpoint Groups.\n\n\nNO\n\n\n\n\n\n\n\n\n{group_name}\n\n\nName of the Group of Endpoint Groups.\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nHeaders\n\n\nRequest\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse\n\n\nStatus: 200 OK\n\n\n\n\nURL\n\n\n/api/v2/results/Report_A/GROUP/GROUP_A?start_time=2015-06-20T12:00:00Z\nend_time=2015-06-26T23:00:00Z\ngranularity=daily\n\n\nResponse Body\n\n\nroot\n\n    \ngroup name=\nGROUP_A\n type=\nGROUP\n\n        \nresults timestamp=\n2015-06-22\n availability=\n68.13896116893515\n reliability=\n50.413931144915935\n/results\n\n        \nresults timestamp=\n2015-06-23\n availability=\n75.36324059247399\n reliability=\n80.8138510808647\n/results\n\n    \n/group\n\n\n/root\n\n\n\n\n\n\n\n[GET]: List Availabilities and Reliabilities for Endpoint Groups\n\n\nThe following methods can be used to obtain a tenant's Availability and Reliability result metrics per Endpoint Group. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity (\nmonthly\n or \ndaily\n) for retrieved results and also format using the \nAccept\n header. Depending on the form of the request the user can request a single endpoint group results or a bulk of endpoint group results filtered by their type and if necessary their \"top-level\" group.\n\n\n[GET] Endpoint Groups\n\n\nInput\n\n\n/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}?[start_time]\n[end_time]\n[granularity]\nor simpler\n/results/{report_name}/{endpoint_group_type}?[start_time]\n[end_time]\n[granularity]\nand\n/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time]\n[end_time]\n[granularity]\nor simpler\n/results/{report_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time]\n[end_time]\n[granularity]\n\n\n\n\nQuery Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n[start_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n[end_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n[granularity]\n\n\nGranularity of time that will be used to present data. Possible values are \nmonthly\n or \ndaily\n\n\nNO\n\n\ndaily\n\n\n\n\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n{report_name}\n\n\nName of the report that contains all the information about the profile, filter tags, group types etc.\n\n\nYES\n\n\n\n\n\n\n\n\n{group_name}\n\n\nName of the Group of Endpoint Groups. If no name is specified then all Endpoint Groups regardless of top-level group are retrieved.\n\n\nNO\n\n\n\n\n\n\n\n\n{group_type}\n\n\nType of the Group of Endpoint Groups. If no type is specified then all groups are retrieved.\n\n\nNO\n\n\n\n\n\n\n\n\n{endpoint_group_name}\n\n\nName of the the Endpoint Group. If no name is specified then all groups are retrieved according to the \n{endpoint_group_type}\n.\n\n\nNO\n\n\n\n\n\n\n\n\n{endpoint_group_type}\n\n\nType of the the Endpoint Group.\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nHeaders\n\n\nRequest\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse\n\n\nStatus: 200 OK\n\n\n\n\nURL\n\n\n/api/v2/results/Report_A/SITE/ST01?start_time=2015-06-20T12:00:00Z\nend_time=2015-06-23T23:00:00Z\ngranularity=daily\n\n\nResponse Body\n\n\nroot\n\n    \ngroup name=\nGROUP_A\n type=\nGROUP\n\n        \ngroup name=\nST01\n type=\nSITE\n\n            \nresults timestamp=\n2015-06-22\n availability=\n66.7\n reliability=\n54.6\n unknown=\n0\n uptime=\n1\n downtime=\n0\n/results\n\n            \nresults timestamp=\n2015-06-23\n availability=\n100\n reliability=\n100\n unknown=\n0\n uptime=\n1\n downtime=\n0\n/results\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\n\n\n[GET]: List Availabilities and Reliabilities for Service Flavors\n\n\nThe following methods can be used to obtain a tenant's Availability and Reliability result metrics per given Service Flavor(s). The api authenticates the tenant using the api-key within the x-api-key header. The user can specify time granularity (\nmonthly\n or \ndaily\n) for retrieved results and also format using the \nAccept\n header. Depending on the form of the request the user can request a single service flavor results or a bulk of service flavor results.\n\n\n[GET] Service Flavors\n\n\nInput\n\n\n/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time]\n[end_time]\n[granularity]\nor\n/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time]\n[end_time]\n[granularity]\nor\n/results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time]\n[end_time]\n[granularity]\nor\n/results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time]\n[end_time]\n[granularity]\n\n\n\n\nQuery Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n[start_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n[end_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n[granularity]\n\n\nGranularity of time that will be used to present data. Possible values are \nmonthly\n or \ndaily\n\n\nNO\n\n\ndaily\n\n\n\n\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n{report_name}\n\n\nName of the report that contains all the information about the profile, filter tags, group types etc.\n\n\nYES\n\n\n\n\n\n\n\n\n{group_type}\n\n\nType of the Group of Endpoint Groups.\n\n\nNO\n\n\n\n\n\n\n\n\n{group_name}\n\n\nName of the Group of Endpoint Groups.\n\n\nNO\n\n\n\n\n\n\n\n\n{endpoint_group_type}\n\n\nType of the the Endpoint Group.\n\n\nYES\n\n\n\n\n\n\n\n\n{endpoint_group_name}\n\n\nName of the the Endpoint Group.\n\n\nYES\n\n\n\n\n\n\n\n\n{service_flavor_type}\n\n\nType of the Service Flavor. If no type is given then results for all Service Flavors under the given Endpoint Group will be provided.\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nHeaders\n\n\nRequest\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse\n\n\nStatus: 200 OK\n\n\n\n\nURL\n\n\n/api/v2/results/Report_A/SITE/ST01/services?start_time=2015-06-22T00:00:00Z\nend_time=2015-06-23T23:23:59Z\ngranularity=daily\n\n\nResponse Body\n\n\nroot\n\n  \ngroup name=\nST01\n type=\nSITE\n\n    \ngroup name=\nSF01\n type=\nservice\n\n      \nresults timestamp=\n2015-06-22\n availability=\n98.26389\n reliability=\n98.26389\n unknown=\n0\n uptime=\n0.98264\n downtime=\n0\n/results\n\n      \nresults timestamp=\n2015-06-23\n availability=\n54.03509\n reliability=\n81.48148\n unknown=\n0.01042\n uptime=\n0.53472\n downtime=\n0.33333\n/results\n\n    \n/group\n\n    \ngroup name=\nSF02\n type=\nservice\n\n      \nresults timestamp=\n2015-06-22\n availability=\n96.875\n reliability=\n96.875\n unknown=\n0\n uptime=\n0.96875\n downtime=\n0\n/results\n\n      \nresults timestamp=\n2015-06-23\n availability=\n100\n reliability=\n100\n unknown=\n0\n uptime=\n1\n downtime=\n0\n/results\n\n    \n/group\n\n  \n/group\n\n\n/root", 
            "title": "Results"
        }, 
        {
            "location": "/results/#results", 
            "text": "Name  Description  Shortcut      GET: List Availability and Reliability results for a group of endpoint groups  This method retrieves the results of a specified group of endpoint group or multiple groups of endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity.  Description    GET: List Availability and Reliability results for an endpoint group  This method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity.  Description    GET: List Availability and Reliability results for a Service Flavor  This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity.  Description", 
            "title": "Results"
        }, 
        {
            "location": "/results/#get-list-availabilities-and-reliabilities-for-groups-of-endpoint-groups", 
            "text": "The following methods can be used to obtain a tenant's Availability and Reliability result metrics per Group of Endpoint Groups. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity ( monthly  or  daily ) for retrieved results and also format using the  Accept  header. Depending on the form of the request the user can request a single group of endpoint groups results or a bulk of group of endpoint groups results filtered by their type.", 
            "title": "[GET]: List Availabilities and Reliabilities for groups of Endpoint Groups"
        }, 
        {
            "location": "/results/#get-group-of-endpoint-groups", 
            "text": "Input  /results/{report_name}/{group_type}?[start_time] [end_time] [granularity]\nor\n/results/{report_name}/{group_type}/{group_name}?[start_time] [end_time] [granularity]  Query Parameters     Type  Description  Required  Default value      [start_time]  UTC time in W3C format  YES     [end_time]  UTC time in W3C format  YES     [granularity]  Granularity of time that will be used to present data. Possible values are  monthly  or  daily  NO  daily     Path Parameters     Name  Description  Required  Default value      {report_name}  Name of the report that contains all the information about the profile, filter tags, group types etc.  YES     {group_type}  Type of the Group of Endpoint Groups.  NO     {group_name}  Name of the Group of Endpoint Groups.  NO      Headers  Request  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response  Status: 200 OK  URL  /api/v2/results/Report_A/GROUP/GROUP_A?start_time=2015-06-20T12:00:00Z end_time=2015-06-26T23:00:00Z granularity=daily  Response Body  root \n     group name= GROUP_A  type= GROUP \n         results timestamp= 2015-06-22  availability= 68.13896116893515  reliability= 50.413931144915935 /results \n         results timestamp= 2015-06-23  availability= 75.36324059247399  reliability= 80.8138510808647 /results \n     /group  /root", 
            "title": "[GET] Group of Endpoint groups"
        }, 
        {
            "location": "/results/#get-list-availabilities-and-reliabilities-for-endpoint-groups", 
            "text": "The following methods can be used to obtain a tenant's Availability and Reliability result metrics per Endpoint Group. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity ( monthly  or  daily ) for retrieved results and also format using the  Accept  header. Depending on the form of the request the user can request a single endpoint group results or a bulk of endpoint group results filtered by their type and if necessary their \"top-level\" group.", 
            "title": "[GET]: List Availabilities and Reliabilities for Endpoint Groups"
        }, 
        {
            "location": "/results/#get-endpoint-groups", 
            "text": "Input  /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}?[start_time] [end_time] [granularity]\nor simpler\n/results/{report_name}/{endpoint_group_type}?[start_time] [end_time] [granularity]\nand\n/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time] [end_time] [granularity]\nor simpler\n/results/{report_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time] [end_time] [granularity]  Query Parameters     Type  Description  Required  Default value      [start_time]  UTC time in W3C format  YES     [end_time]  UTC time in W3C format  YES     [granularity]  Granularity of time that will be used to present data. Possible values are  monthly  or  daily  NO  daily     Path Parameters     Name  Description  Required  Default value      {report_name}  Name of the report that contains all the information about the profile, filter tags, group types etc.  YES     {group_name}  Name of the Group of Endpoint Groups. If no name is specified then all Endpoint Groups regardless of top-level group are retrieved.  NO     {group_type}  Type of the Group of Endpoint Groups. If no type is specified then all groups are retrieved.  NO     {endpoint_group_name}  Name of the the Endpoint Group. If no name is specified then all groups are retrieved according to the  {endpoint_group_type} .  NO     {endpoint_group_type}  Type of the the Endpoint Group.  YES      Headers  Request  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response  Status: 200 OK  URL  /api/v2/results/Report_A/SITE/ST01?start_time=2015-06-20T12:00:00Z end_time=2015-06-23T23:00:00Z granularity=daily  Response Body  root \n     group name= GROUP_A  type= GROUP \n         group name= ST01  type= SITE \n             results timestamp= 2015-06-22  availability= 66.7  reliability= 54.6  unknown= 0  uptime= 1  downtime= 0 /results \n             results timestamp= 2015-06-23  availability= 100  reliability= 100  unknown= 0  uptime= 1  downtime= 0 /results \n         /group \n     /group  /root", 
            "title": "[GET] Endpoint Groups"
        }, 
        {
            "location": "/results/#get-list-availabilities-and-reliabilities-for-service-flavors", 
            "text": "The following methods can be used to obtain a tenant's Availability and Reliability result metrics per given Service Flavor(s). The api authenticates the tenant using the api-key within the x-api-key header. The user can specify time granularity ( monthly  or  daily ) for retrieved results and also format using the  Accept  header. Depending on the form of the request the user can request a single service flavor results or a bulk of service flavor results.", 
            "title": "[GET]: List Availabilities and Reliabilities for Service Flavors"
        }, 
        {
            "location": "/results/#get-service-flavors", 
            "text": "Input  /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time] [end_time] [granularity]\nor\n/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time] [end_time] [granularity]\nor\n/results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time] [end_time] [granularity]\nor\n/results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time] [end_time] [granularity]  Query Parameters     Type  Description  Required  Default value      [start_time]  UTC time in W3C format  YES     [end_time]  UTC time in W3C format  YES     [granularity]  Granularity of time that will be used to present data. Possible values are  monthly  or  daily  NO  daily     Path Parameters     Name  Description  Required  Default value      {report_name}  Name of the report that contains all the information about the profile, filter tags, group types etc.  YES     {group_type}  Type of the Group of Endpoint Groups.  NO     {group_name}  Name of the Group of Endpoint Groups.  NO     {endpoint_group_type}  Type of the the Endpoint Group.  YES     {endpoint_group_name}  Name of the the Endpoint Group.  YES     {service_flavor_type}  Type of the Service Flavor. If no type is given then results for all Service Flavors under the given Endpoint Group will be provided.  NO      Headers  Request  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response  Status: 200 OK  URL  /api/v2/results/Report_A/SITE/ST01/services?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily  Response Body  root \n   group name= ST01  type= SITE \n     group name= SF01  type= service \n       results timestamp= 2015-06-22  availability= 98.26389  reliability= 98.26389  unknown= 0  uptime= 0.98264  downtime= 0 /results \n       results timestamp= 2015-06-23  availability= 54.03509  reliability= 81.48148  unknown= 0.01042  uptime= 0.53472  downtime= 0.33333 /results \n     /group \n     group name= SF02  type= service \n       results timestamp= 2015-06-22  availability= 96.875  reliability= 96.875  unknown= 0  uptime= 0.96875  downtime= 0 /results \n       results timestamp= 2015-06-23  availability= 100  reliability= 100  unknown= 0  uptime= 1  downtime= 0 /results \n     /group \n   /group  /root", 
            "title": "[GET] Service Flavors"
        }, 
        {
            "location": "/status/", 
            "text": "Status results\n\n\nAPI calls for retrieving monitoring status results\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Service Metric Status Timelines\n\n\nThis method may be used to retrieve a specific service metric status timeline (applies on a specific service endpoint).\n\n\nDescription\n\n\n\n\n\n\nGET: List Service Endpoint Status Timelines\n\n\nThis method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type).\n\n\nDescription\n\n\n\n\n\n\nGET: List Service  Status Timelines\n\n\nThis method may be used to retrieve a specific service type status timeline (applies for a specific service endpoint group).\n\n\nDescription\n\n\n\n\n\n\nGET: List Endpoint Group Status Timelines\n\n\nThis method may be used to retrieve endpoint group status timelines.\n\n\nDescription\n\n\n\n\n\n\nGET: Metric Result\n\n\nThis method may be used to retrieve a specific and detailed metric result.\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n[GET]: List Service Metric Status Timelines\n\n\nThis method may be used to retrieve a specific service metric status timeline (applies on a specific host endpoint and a specific service flavor).\n\n\nInput\n\n\nList All metrics:\n\n\n/status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints/{hostname}/metrics?[start_time]\n[end_time]\n\n\n\n\nList a specific metric:\n\n\n/status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}/metrics/{metric_name}?[start_time]\n[end_time]\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nreport\n\n\nname of the report used\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_type\n\n\ntype of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_name\n\n\nname of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\nservice_type\n\n\ntype of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\nhostname\n\n\nhostname of service endpoint\n\n\nYES\n\n\n\n\n\n\n\n\nmetric_name\n\n\nname of the metric\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nUrl Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nstart_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\nend_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nNotes\n:\n\ngroup_type\n and \ngroup_name\n in the specific request refer always to endpoint groups (eg. \nSITES\n).\nwhen \nmetric_name\n is supplied, the request returns results for a specific metric. Else returns results for all available metrics for the specific \nendpoint\n (and \nreport\n)\n\n\nHeaders\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse Code\n\n\nStatus: 200 OK\n\n\n\n\nResponse body\n\n\nList All metrics:\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \ngroup name=\nCREAM-CE\n type=\nservice\n\n            \nendpoint name=\ncream01.afroditi.gr\n\n                \nmetric name=\nemi.cream.CREAMCE-JobSubmit\n\n                    \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n                    \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n                    \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n                \n/metric\n\n                \nmetric name=\nemi.wn.WN-Bi\n\n                    \nstatus timestamp=\n2015-04-30T22:59:00Z\n status=\nOK\n/status\n\n                    \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n                    \nstatus timestamp=\n2015-05-01T03:00:00Z\n status=\nOK\n/status\n\n                \n/metric\n\n            \n/endpoint\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\nList specific metric\n\n\n(\nmetric_name=emi.cream.CREAM-CE-JobSubmit\n):\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics/emi.cream.CREAMCE-JobSubmit?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \ngroup name=\nCREAM-CE\n type=\nservice\n\n            \nendpoint name=\ncream01.afroditi.gr\n\n                \nmetric name=\nemi.cream.CREAMCE-JobSubmit\n\n                    \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n                    \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n                    \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n                \n/metric\n\n            \n/endpoint\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\n\n\n[GET]: List Service Endpoint Status Timelines\n\n\nThis method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type).\n\n\nInput\n\n\nList All endpoints:\n\n\n/status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints?[start_time]\n[end_time]\n\n\n\n\nList a specific endpoint:\n\n\n/status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}?[start_time]\n[end_time]\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nreport\n\n\nname of the report used\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_type\n\n\ntype of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_name\n\n\nname of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\nservice_type\n\n\ntype of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\nhostname\n\n\nhostname of service endpoint\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nUrl Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nstart_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\nend_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nNotes\n:\n\ngroup_type\n and \ngroup_name\n in the specific request refer always to endpoint groups (eg. \nSITES\n).\nwhen \nhostname\n is supplied, the request returns results for a specific endpoint. Else returns results for all available metrics for the specific \nendpoint\n (and \nreport\n)\n\n\nHeaders\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse Code\n\n\nStatus: 200 OK\n\n\n\n\nResponse body\n\n\nList All metrics:\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \ngroup name=\nCREAM-CE\n type=\nservice\n\n            \nendpoint name=\ncream01.afroditi.gr\n\n                \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n                \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n                \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n            \n/endpoint\n\n            \nendpoint name=\ncream02.afroditi.gr\n\n                \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n                \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n                \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n            \n/endpoint\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\nList specific endpoint\n\n\n(\nhostname=cream01.afroditi.gr\n):\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \ngroup name=\nCREAM-CE\n type=\nservice\n\n            \nendpoint name=\ncream01.afroditi.gr\n\n                \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n                \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n                \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n            \n/endpoint\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\n\n\n[GET]: List Service Status Timelines\n\n\nThis method may be used to retrieve a specific service flavor status timeline (applies for a specific service endpoint group).\n\n\nInput\n\n\nList All service types:\n\n\n/status/{report}/{group_type}/{group_name}/services[start_time]\n[end_time]\n\n\n\n\nList a specific service type:\n\n\n/status/{report}/{group_type}/{group_name}/services/{service_type}[start_time]\n[end_time]\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nreport\n\n\nname of the report used\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_type\n\n\ntype of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_name\n\n\nname of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\nservice_type\n\n\ntype of endpoint group\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nUrl Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nstart_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\nend_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nNotes\n:\n\ngroup_type\n and \ngroup_name\n in the specific request refer always to endpoint groups (eg. \nSITES\n).\nwhen \nservice_name\n is supplied, the request returns results for a specific service type. Else returns results for all available service types for the specific \nendpoint_group\n (and \nreport\n)\n\n\nHeaders\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse Code\n\n\nStatus: 200 OK\n\n\n\n\nResponse body\n\n\nList All service types:\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH/services?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \ngroup name=\nCREAM-CE\n type=\nservice\n\n            \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n            \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n            \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n        \n/group\n\n        \ngroup name=\nSRMv2\n type=\nservice\n\n            \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n            \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n            \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\nList specific service type\n\n\n(\nservice_type=CREAM-CE\n):\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \ngroup name=\nCREAM-CE\n type=\nservice\n\n            \nstatus timestamp=\n2015-04-30T23:59:00Z\n status=\nOK\n/status\n\n            \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n            \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n        \n/group\n\n    \n/group\n\n\n/root\n\n\n\n\n\n\n\n[GET]: List Endpoint Group Status Timelines\n\n\nThis method may be used to retrieve status timelines for endpoint groups.\n\n\nInput\n\n\nList All endpoint groups of specific type:\n\n\n/status/{report}/{group_type}[start_time]\n[end_time]\n\n\n\n\nList a specific endpoint group of specific type:\n\n\n/status/{report}/{group_type}/{group_name}[start_time]\n[end_time]\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nreport\n\n\nname of the report used\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_type\n\n\ntype of endpoint group\n\n\nYES\n\n\n\n\n\n\n\n\ngroup_name\n\n\nname of endpoint group\n\n\nNO\n\n\n\n\n\n\n\n\n\n\nUrl Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\nstart_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\nend_time\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nNotes\n:\n\ngroup_type\n and \ngroup_name\n in the specific request refer always to endpoint groups (eg. \nSITES\n).\nwhen \ngroup_name\n is supplied, the request returns results for a specific endpoint group. Else returns results for all available endpoint groups of the specific \ngroup_type\n\n\nHeaders\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse Code\n\n\nStatus: 200 OK\n\n\n\n\nResponse body\n\n\nList All endpoint groups:\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n        \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n        \nstatus timestamp=\n2015-05-01T05:00:00Z\n status=\nOK\n/status\n\n    \n/group\n\n    \ngroup name=\nHG-01-AUTH\n type=\nSITES\n\n        \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n        \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n        \nstatus timestamp=\n2015-05-01T05:00:00Z\n status=\nOK\n/status\n\n    \n/group\n\n\n/root\n\n\n\n\n\nList specific endpoint group\n\n\n(\ngroup_name=HG-03-AUTH\n):\n\n\nExample Request:\n\n\nURL:\n\n\n/status/EGI_CRITICAL/SITES/HG-03-AUTH?start_time=2015-05-01T00:00:00Z\nend_time=2015-05-01T23:59:59Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\nroot\n\n    \ngroup name=\nHG-03-AUTH\n type=\nSITES\n\n        \nstatus timestamp=\n2015-05-01T01:00:00Z\n status=\nCRITICAL\n/status\n\n        \nstatus timestamp=\n2015-05-01T02:00:00Z\n status=\nOK\n/status\n\n        \nstatus timestamp=\n2015-05-01T05:00:00Z\n status=\nOK\n/status\n\n    \n/group\n\n\n/root\n\n\n\n\n\n\n\n[GET]: Metric Result\n\n\nThis method may be used to retrieve a detailed metric result.\n\n\nInput\n\n\n/metric_result/{hostname}/{metric_name}?[exec_time]\n\n\n\n\nPath Parameters\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n{hostname}\n\n\nName of the endpoint\n\n\nYES\n\n\n\n\n\n\n\n\n{metric_name}\n\n\nName of the metric (probe) for which results are queries\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\nDefault value\n\n\n\n\n\n\n\n\n\n\n[exec_time]\n\n\nUTC time in W3C format\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nHeaders\n\n\nx-api-key: \ntenant_key_value\n\nAccept: \napplication/xml\n or \napplication/json\n\n\n\n\n\nResponse Code\n\n\nStatus: 200 OK\n\n\n\n\nResponse body\n\n\nExample Request:\n\n\nURL:\n\n\n/api/v2/metric_result/www.example.com/httpd_check?exec_time=2015-06-20T12:00:00Z\n\n\n\n\nHeaders:\n\n\nx-api-key:\nINSERTTENANTKEYHERE\n\nAccept:\napplication/xml\n\n\n\n\n\nExample Response:\n\n\nCode:\n\n\nStatus: 200 OK\n\n\n\n\nReponse body:\n\n\n \nroot\n\n   \nhost name=\nwww.example.com\n\n     \nmetric name=\nhttpd_check\n\n       \nstatus timestamp=\n2015-06-20T12:00:00Z\n value=\nCRITICAL\n\n         \nsummary\nhttpd status is CRITICAL\n/summary\n\n         \nmessage\nhttpd service seems down. Failed to connect to port 80.\n/message\n\n       \n/status\n\n     \n/metric\n\n   \n/host\n\n \n/root", 
            "title": "Status Results"
        }, 
        {
            "location": "/status/#status-results", 
            "text": "API calls for retrieving monitoring status results     Name  Description  Shortcut      GET: List Service Metric Status Timelines  This method may be used to retrieve a specific service metric status timeline (applies on a specific service endpoint).  Description    GET: List Service Endpoint Status Timelines  This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type).  Description    GET: List Service  Status Timelines  This method may be used to retrieve a specific service type status timeline (applies for a specific service endpoint group).  Description    GET: List Endpoint Group Status Timelines  This method may be used to retrieve endpoint group status timelines.  Description    GET: Metric Result  This method may be used to retrieve a specific and detailed metric result.  Description", 
            "title": "Status results"
        }, 
        {
            "location": "/status/#get-list-service-metric-status-timelines", 
            "text": "This method may be used to retrieve a specific service metric status timeline (applies on a specific host endpoint and a specific service flavor).  Input  List All metrics:  /status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints/{hostname}/metrics?[start_time] [end_time]  List a specific metric:  /status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}/metrics/{metric_name}?[start_time] [end_time]  Path Parameters     Type  Description  Required  Default value      report  name of the report used  YES     group_type  type of endpoint group  YES     group_name  name of endpoint group  YES     service_type  type of endpoint group  YES     hostname  hostname of service endpoint  YES     metric_name  name of the metric  NO      Url Parameters     Type  Description  Required  Default value      start_time  UTC time in W3C format  YES     end_time  UTC time in W3C format  YES      Notes : group_type  and  group_name  in the specific request refer always to endpoint groups (eg.  SITES ).\nwhen  metric_name  is supplied, the request returns results for a specific metric. Else returns results for all available metrics for the specific  endpoint  (and  report )  Headers  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response Code  Status: 200 OK  Response body  List All metrics:  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         group name= CREAM-CE  type= service \n             endpoint name= cream01.afroditi.gr \n                 metric name= emi.cream.CREAMCE-JobSubmit \n                     status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n                     status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n                     status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n                 /metric \n                 metric name= emi.wn.WN-Bi \n                     status timestamp= 2015-04-30T22:59:00Z  status= OK /status \n                     status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n                     status timestamp= 2015-05-01T03:00:00Z  status= OK /status \n                 /metric \n             /endpoint \n         /group \n     /group  /root   List specific metric  ( metric_name=emi.cream.CREAM-CE-JobSubmit ):  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics/emi.cream.CREAMCE-JobSubmit?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         group name= CREAM-CE  type= service \n             endpoint name= cream01.afroditi.gr \n                 metric name= emi.cream.CREAMCE-JobSubmit \n                     status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n                     status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n                     status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n                 /metric \n             /endpoint \n         /group \n     /group  /root", 
            "title": "[GET]: List Service Metric Status Timelines"
        }, 
        {
            "location": "/status/#get-list-service-endpoint-status-timelines", 
            "text": "This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type).  Input  List All endpoints:  /status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints?[start_time] [end_time]  List a specific endpoint:  /status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}?[start_time] [end_time]  Path Parameters     Type  Description  Required  Default value      report  name of the report used  YES     group_type  type of endpoint group  YES     group_name  name of endpoint group  YES     service_type  type of endpoint group  YES     hostname  hostname of service endpoint  NO      Url Parameters     Type  Description  Required  Default value      start_time  UTC time in W3C format  YES     end_time  UTC time in W3C format  YES      Notes : group_type  and  group_name  in the specific request refer always to endpoint groups (eg.  SITES ).\nwhen  hostname  is supplied, the request returns results for a specific endpoint. Else returns results for all available metrics for the specific  endpoint  (and  report )  Headers  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response Code  Status: 200 OK  Response body  List All metrics:  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         group name= CREAM-CE  type= service \n             endpoint name= cream01.afroditi.gr \n                 status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n                 status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n                 status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n             /endpoint \n             endpoint name= cream02.afroditi.gr \n                 status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n                 status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n                 status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n             /endpoint \n         /group \n     /group  /root   List specific endpoint  ( hostname=cream01.afroditi.gr ):  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         group name= CREAM-CE  type= service \n             endpoint name= cream01.afroditi.gr \n                 status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n                 status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n                 status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n             /endpoint \n         /group \n     /group  /root", 
            "title": "[GET]: List Service Endpoint Status Timelines"
        }, 
        {
            "location": "/status/#get-list-service-status-timelines", 
            "text": "This method may be used to retrieve a specific service flavor status timeline (applies for a specific service endpoint group).  Input  List All service types:  /status/{report}/{group_type}/{group_name}/services[start_time] [end_time]  List a specific service type:  /status/{report}/{group_type}/{group_name}/services/{service_type}[start_time] [end_time]  Path Parameters     Type  Description  Required  Default value      report  name of the report used  YES     group_type  type of endpoint group  YES     group_name  name of endpoint group  YES     service_type  type of endpoint group  NO      Url Parameters     Type  Description  Required  Default value      start_time  UTC time in W3C format  YES     end_time  UTC time in W3C format  YES      Notes : group_type  and  group_name  in the specific request refer always to endpoint groups (eg.  SITES ).\nwhen  service_name  is supplied, the request returns results for a specific service type. Else returns results for all available service types for the specific  endpoint_group  (and  report )  Headers  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response Code  Status: 200 OK  Response body  List All service types:  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH/services?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         group name= CREAM-CE  type= service \n             status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n             status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n             status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n         /group \n         group name= SRMv2  type= service \n             status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n             status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n             status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n         /group \n     /group  /root   List specific service type  ( service_type=CREAM-CE ):  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         group name= CREAM-CE  type= service \n             status timestamp= 2015-04-30T23:59:00Z  status= OK /status \n             status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n             status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n         /group \n     /group  /root", 
            "title": "[GET]: List Service Status Timelines"
        }, 
        {
            "location": "/status/#get-list-endpoint-group-status-timelines", 
            "text": "This method may be used to retrieve status timelines for endpoint groups.  Input  List All endpoint groups of specific type:  /status/{report}/{group_type}[start_time] [end_time]  List a specific endpoint group of specific type:  /status/{report}/{group_type}/{group_name}[start_time] [end_time]  Path Parameters     Type  Description  Required  Default value      report  name of the report used  YES     group_type  type of endpoint group  YES     group_name  name of endpoint group  NO      Url Parameters     Type  Description  Required  Default value      start_time  UTC time in W3C format  YES     end_time  UTC time in W3C format  YES      Notes : group_type  and  group_name  in the specific request refer always to endpoint groups (eg.  SITES ).\nwhen  group_name  is supplied, the request returns results for a specific endpoint group. Else returns results for all available endpoint groups of the specific  group_type  Headers  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response Code  Status: 200 OK  Response body  List All endpoint groups:  Example Request:  URL:  /status/EGI_CRITICAL/SITES?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n         status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n         status timestamp= 2015-05-01T05:00:00Z  status= OK /status \n     /group \n     group name= HG-01-AUTH  type= SITES \n         status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n         status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n         status timestamp= 2015-05-01T05:00:00Z  status= OK /status \n     /group  /root   List specific endpoint group  ( group_name=HG-03-AUTH ):  Example Request:  URL:  /status/EGI_CRITICAL/SITES/HG-03-AUTH?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:  root \n     group name= HG-03-AUTH  type= SITES \n         status timestamp= 2015-05-01T01:00:00Z  status= CRITICAL /status \n         status timestamp= 2015-05-01T02:00:00Z  status= OK /status \n         status timestamp= 2015-05-01T05:00:00Z  status= OK /status \n     /group  /root", 
            "title": "[GET]: List Endpoint Group Status Timelines"
        }, 
        {
            "location": "/status/#get-metric-result", 
            "text": "This method may be used to retrieve a detailed metric result.  Input  /metric_result/{hostname}/{metric_name}?[exec_time]  Path Parameters     Name  Description  Required  Default value      {hostname}  Name of the endpoint  YES     {metric_name}  Name of the metric (probe) for which results are queries  YES      URL Parameters     Type  Description  Required  Default value      [exec_time]  UTC time in W3C format  YES      Headers  x-api-key:  tenant_key_value \nAccept:  application/xml  or  application/json   Response Code  Status: 200 OK  Response body  Example Request:  URL:  /api/v2/metric_result/www.example.com/httpd_check?exec_time=2015-06-20T12:00:00Z  Headers:  x-api-key: INSERTTENANTKEYHERE \nAccept: application/xml   Example Response:  Code:  Status: 200 OK  Reponse body:    root \n    host name= www.example.com \n      metric name= httpd_check \n        status timestamp= 2015-06-20T12:00:00Z  value= CRITICAL \n          summary httpd status is CRITICAL /summary \n          message httpd service seems down. Failed to connect to port 80. /message \n        /status \n      /metric \n    /host \n  /root", 
            "title": "[GET]: Metric Result"
        }, 
        {
            "location": "/metric_profiles/", 
            "text": "API Calls\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Metric Profile Requests\n\n\nThis method can be used to retrieve a list of current metric profiles.\n\n\n Description\n\n\n\n\n\n\nGET: List a specific Metric profile\n\n\nThis method can be used to retrieve a specific metric profile based on its id.\n\n\n Description\n\n\n\n\n\n\nPOST: Create a new metric profile\n\n\nThis method can be used to create a new metric profile\n\n\n Description\n\n\n\n\n\n\nPUT: Update a metric profile\n\n\nThis method can be used to update information on an existing metric profile\n\n\n Description\n\n\n\n\n\n\nDELETE: Delete a metric profile\n\n\nThis method can be used to delete an existing metric profile\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n[GET]: List Metric Profiles\n\n\nThis method can be used to retrieve a list of current Metric profiles\n\n\nInput\n\n\nGET /metric_profiles\n\n\n\n\nOptional Query Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nname\n\n\nmetric profile name to be used as query\n\n\nNO\n\n\n\n\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50c\n,\n   \nname\n: \nch.cern.SAM.ROC\n,\n   \nservices\n: [\n    {\n     \nservice\n: \nCREAM-CE\n,\n     \nmetrics\n: [\n      \nemi.cream.CREAMCE-JobSubmit\n,\n      \nemi.wn.WN-Bi\n,\n      \nemi.wn.WN-Csh\n,\n      \nhr.srce.CADist-Check\n,\n      \nhr.srce.CREAMCE-CertLifetime\n,\n      \nemi.wn.WN-SoftVer\n\n     ]\n    },\n    {\n     \nservice\n: \nSRMv2\n,\n     \nmetrics\n: [\n      \nhr.srce.SRM2-CertLifetime\n,\n      \norg.sam.SRM-Del\n,\n      \norg.sam.SRM-Get\n,\n      \norg.sam.SRM-GetSURLs\n,\n      \norg.sam.SRM-GetTURLs\n,\n      \norg.sam.SRM-Ls\n,\n      \norg.sam.SRM-LsDir\n,\n      \norg.sam.SRM-Put\n\n     ]\n    }\n   ]\n  },\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \nname\n: \nch.cern.SAM.ROC_CRITICAL\n,\n   \nservices\n: [\n    {\n     \nservice\n: \nCREAM-CE\n,\n     \nmetrics\n: [\n      \nemi.cream.CREAMCE-JobSubmit\n,\n      \nemi.wn.WN-Bi\n,\n      \nemi.wn.WN-Csh\n,\n      \nemi.wn.WN-SoftVer\n\n     ]\n    },\n    {\n     \nservice\n: \nSRMv2\n,\n     \nmetrics\n: [\n      \nhr.srce.SRM2-CertLifetime\n,\n      \norg.sam.SRM-Del\n,\n      \norg.sam.SRM-Get\n,\n      \norg.sam.SRM-GetSURLs\n,\n      \norg.sam.SRM-GetTURLs\n,\n      \norg.sam.SRM-Ls\n,\n      \norg.sam.SRM-LsDir\n,\n      \norg.sam.SRM-Put\n\n     ]\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\n[GET]: List A Specific Metric profile\n\n\nThis method can be used to retrieve specific metric profile based on its id\n\n\nInput\n\n\nGET /metric_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \nname\n: \nch.cern.SAM.ROC_CRITICAL\n,\n   \nservices\n: [\n    {\n     \nservice\n: \nCREAM-CE\n,\n     \nmetrics\n: [\n      \nemi.cream.CREAMCE-JobSubmit\n,\n      \nemi.wn.WN-Bi\n,\n      \nemi.wn.WN-Csh\n,\n      \nemi.wn.WN-SoftVer\n\n     ]\n    },\n    {\n     \nservice\n: \nSRMv2\n,\n     \nmetrics\n: [\n      \nhr.srce.SRM2-CertLifetime\n,\n      \norg.sam.SRM-Del\n,\n      \norg.sam.SRM-Get\n,\n      \norg.sam.SRM-GetSURLs\n,\n      \norg.sam.SRM-GetTURLs\n,\n      \norg.sam.SRM-Ls\n,\n      \norg.sam.SRM-LsDir\n,\n      \norg.sam.SRM-Put\n\n     ]\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\n[POST]: Create a new Metric Profile\n\n\nThis method can be used to insert a new metric profile\n\n\nInput\n\n\nPOST /metric_profiles\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPOST BODY\n\n\n{\n  \nname\n: \ntest_profile\n,\n  \nservices\n: [\n    {\n      \nservice\n: \nService-A\n,\n      \nmetrics\n: [\n        \nmetric.A.1\n,\n        \nmetric.A.2\n,\n        \nmetric.A.3\n,\n        \nmetric.A.4\n\n      ]\n    },\n    {\n      \nservice\n: \nService-B\n,\n      \nmetrics\n: [\n        \nmetric.B.1\n,\n        \nmetric.B.2\n\n      ]\n    }\n  ]\n}\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nMetric Profile successfully created\n,\n  \ncode\n: \n201\n\n },\n \ndata\n: {\n  \nid\n: \n{{ID}}\n,\n  \nlinks\n: {\n   \nself\n: \nhttps:///api/v2/metric_profiles/{{ID}}\n\n  }\n }\n}\n\n\n\n\n\n\n[PUT]: Update information on an existing metric profile\n\n\nThis method can be used to update information on an existing metric profile\n\n\nInput\n\n\nPUT /metric_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPUT BODY\n\n\n{\n  \nname\n: \ntest_profile\n,\n  \nservices\n: [\n    {\n      \nservice\n: \nService-A\n,\n      \nmetrics\n: [\n        \nmetric.A.1\n,\n        \nmetric.A.2\n,\n        \nmetric.A.3\n,\n        \nmetric.A.4\n\n      ]\n    },\n    {\n      \nservice\n: \nService-B\n,\n      \nmetrics\n: [\n        \nmetric.B.1\n,\n        \nmetric.B.2\n\n      ]\n    }\n  ]\n}\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nMetric Profile successfully updated\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: {\n  \nid\n: \n{{ID}}\n,\n  \nlinks\n: {\n   \nself\n: \nhttps:///api/v2/metric_profiles/{{ID}}\n\n  }\n }\n}\n\n\n\n\n\n\n[DELETE]: Delete an existing metric profile\n\n\nThis method can be used to delete an existing metric profile\n\n\nInput\n\n\nDELETE /metric_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nMetric Profile Successfully Deleted\n,\n  \ncode\n: \n200\n\n }\n}", 
            "title": "Metric Profiles"
        }, 
        {
            "location": "/metric_profiles/#api-calls", 
            "text": "Name  Description  Shortcut      GET: List Metric Profile Requests  This method can be used to retrieve a list of current metric profiles.   Description    GET: List a specific Metric profile  This method can be used to retrieve a specific metric profile based on its id.   Description    POST: Create a new metric profile  This method can be used to create a new metric profile   Description    PUT: Update a metric profile  This method can be used to update information on an existing metric profile   Description    DELETE: Delete a metric profile  This method can be used to delete an existing metric profile   Description", 
            "title": "API Calls"
        }, 
        {
            "location": "/metric_profiles/#get-list-metric-profiles", 
            "text": "This method can be used to retrieve a list of current Metric profiles  Input  GET /metric_profiles  Optional Query Parameters     Type  Description  Required      name  metric profile name to be used as query  NO     Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50c ,\n    name :  ch.cern.SAM.ROC ,\n    services : [\n    {\n      service :  CREAM-CE ,\n      metrics : [\n       emi.cream.CREAMCE-JobSubmit ,\n       emi.wn.WN-Bi ,\n       emi.wn.WN-Csh ,\n       hr.srce.CADist-Check ,\n       hr.srce.CREAMCE-CertLifetime ,\n       emi.wn.WN-SoftVer \n     ]\n    },\n    {\n      service :  SRMv2 ,\n      metrics : [\n       hr.srce.SRM2-CertLifetime ,\n       org.sam.SRM-Del ,\n       org.sam.SRM-Get ,\n       org.sam.SRM-GetSURLs ,\n       org.sam.SRM-GetTURLs ,\n       org.sam.SRM-Ls ,\n       org.sam.SRM-LsDir ,\n       org.sam.SRM-Put \n     ]\n    }\n   ]\n  },\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    name :  ch.cern.SAM.ROC_CRITICAL ,\n    services : [\n    {\n      service :  CREAM-CE ,\n      metrics : [\n       emi.cream.CREAMCE-JobSubmit ,\n       emi.wn.WN-Bi ,\n       emi.wn.WN-Csh ,\n       emi.wn.WN-SoftVer \n     ]\n    },\n    {\n      service :  SRMv2 ,\n      metrics : [\n       hr.srce.SRM2-CertLifetime ,\n       org.sam.SRM-Del ,\n       org.sam.SRM-Get ,\n       org.sam.SRM-GetSURLs ,\n       org.sam.SRM-GetTURLs ,\n       org.sam.SRM-Ls ,\n       org.sam.SRM-LsDir ,\n       org.sam.SRM-Put \n     ]\n    }\n   ]\n  }\n ]\n}", 
            "title": "[GET]: List Metric Profiles"
        }, 
        {
            "location": "/metric_profiles/#get-list-a-specific-metric-profile", 
            "text": "This method can be used to retrieve specific metric profile based on its id  Input  GET /metric_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    name :  ch.cern.SAM.ROC_CRITICAL ,\n    services : [\n    {\n      service :  CREAM-CE ,\n      metrics : [\n       emi.cream.CREAMCE-JobSubmit ,\n       emi.wn.WN-Bi ,\n       emi.wn.WN-Csh ,\n       emi.wn.WN-SoftVer \n     ]\n    },\n    {\n      service :  SRMv2 ,\n      metrics : [\n       hr.srce.SRM2-CertLifetime ,\n       org.sam.SRM-Del ,\n       org.sam.SRM-Get ,\n       org.sam.SRM-GetSURLs ,\n       org.sam.SRM-GetTURLs ,\n       org.sam.SRM-Ls ,\n       org.sam.SRM-LsDir ,\n       org.sam.SRM-Put \n     ]\n    }\n   ]\n  }\n ]\n}", 
            "title": "[GET]: List A Specific Metric profile"
        }, 
        {
            "location": "/metric_profiles/#post-create-a-new-metric-profile", 
            "text": "This method can be used to insert a new metric profile  Input  POST /metric_profiles  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  POST BODY  {\n   name :  test_profile ,\n   services : [\n    {\n       service :  Service-A ,\n       metrics : [\n         metric.A.1 ,\n         metric.A.2 ,\n         metric.A.3 ,\n         metric.A.4 \n      ]\n    },\n    {\n       service :  Service-B ,\n       metrics : [\n         metric.B.1 ,\n         metric.B.2 \n      ]\n    }\n  ]\n}  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Metric Profile successfully created ,\n   code :  201 \n },\n  data : {\n   id :  {{ID}} ,\n   links : {\n    self :  https:///api/v2/metric_profiles/{{ID}} \n  }\n }\n}", 
            "title": "[POST]: Create a new Metric Profile"
        }, 
        {
            "location": "/metric_profiles/#put-update-information-on-an-existing-metric-profile", 
            "text": "This method can be used to update information on an existing metric profile  Input  PUT /metric_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  PUT BODY  {\n   name :  test_profile ,\n   services : [\n    {\n       service :  Service-A ,\n       metrics : [\n         metric.A.1 ,\n         metric.A.2 ,\n         metric.A.3 ,\n         metric.A.4 \n      ]\n    },\n    {\n       service :  Service-B ,\n       metrics : [\n         metric.B.1 ,\n         metric.B.2 \n      ]\n    }\n  ]\n}  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Metric Profile successfully updated ,\n   code :  200 \n },\n  data : {\n   id :  {{ID}} ,\n   links : {\n    self :  https:///api/v2/metric_profiles/{{ID}} \n  }\n }\n}", 
            "title": "[PUT]: Update information on an existing metric profile"
        }, 
        {
            "location": "/metric_profiles/#delete-delete-an-existing-metric-profile", 
            "text": "This method can be used to delete an existing metric profile  Input  DELETE /metric_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Metric Profile Successfully Deleted ,\n   code :  200 \n }\n}", 
            "title": "[DELETE]: Delete an existing metric profile"
        }, 
        {
            "location": "/aggregation_profiles/", 
            "text": "API Calls\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Aggregation Profile Requests\n\n\nThis method can be used to retrieve a list of current aggregation profiles.\n\n\n Description\n\n\n\n\n\n\nGET: List a specific  aggregation profile\n\n\nThis method can be used to retrieve a specific  aggregation profile based on its id.\n\n\n Description\n\n\n\n\n\n\nPOST: Create a new  aggregation profile\n\n\nThis method can be used to create a new  aggregation profile\n\n\n Description\n\n\n\n\n\n\nPUT: Update an aggregation profile\n\n\nThis method can be used to update information on an existing  aggregation profile\n\n\n Description\n\n\n\n\n\n\nDELETE: Delete an  aggregation profile\n\n\nThis method can be used to delete an existing  aggregation profile\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGET: List Aggregation Profiles\n\n\nThis method can be used to retrieve a list of current  aggregation profiles\n\n\nInput\n\n\nGET /aggregation_profiles\n\n\n\n\nOptional Query Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nname\n\n\naggregation profile name to be used as query\n\n\nNO\n\n\n\n\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50c\n,\n   \nname\n: \ncloud\n,\n   \nnamespace\n: \ntest\n,\n   \nendpoint_group\n: \nsites\n,\n   \nmetric_operation\n: \nAND\n,\n   \nprofile_operation\n: \nAND\n,\n   \nmetric_profile\n: {\n    \nname\n: \nroc.critical\n,\n    \nid\n: \n5637d684-1f8e-4a02-a502-720e8f11e432\n\n   },\n   \ngroups\n: [\n    {\n     \nname\n: \ncompute\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEA\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICEB\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nimages\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEC\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICED\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \nname\n: \ncritical\n,\n   \nnamespace\n: \ntest\n,\n   \nendpoint_group\n: \nsites\n,\n   \nmetric_operation\n: \nAND\n,\n   \nprofile_operation\n: \nAND\n,\n   \nmetric_profile\n: {\n    \nname\n: \nroc.critical\n,\n    \nid\n: \n5637d684-1f8e-4a02-a502-720e8f11e432\n\n   },\n   \ngroups\n: [\n    {\n     \nname\n: \ncompute\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nCREAM-CE\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nARC-CE\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nstorage\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSRMv2\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSRM\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\nGET: List A Specific Aggregation profile\n\n\nThis method can be used to retrieve specific aggregation profile based on its id\n\n\nInput\n\n\nGET /aggregation_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50c\n,\n   \nname\n: \ncloud\n,\n   \nnamespace\n: \ntest\n,\n   \nendpoint_group\n: \nsites\n,\n   \nmetric_operation\n: \nAND\n,\n   \nprofile_operation\n: \nAND\n,\n   \nmetric_profile\n: {\n    \nname\n: \nroc.critical\n,\n    \nid\n: \n5637d684-1f8e-4a02-a502-720e8f11e432\n\n   },\n   \ngroups\n: [\n    {\n     \nname\n: \ncompute\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEA\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICEB\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nimages\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEC\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICED\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\nPOST: Create a new Aggregation Profile\n\n\nThis method can be used to insert a new aggregation profile\n\n\nInput\n\n\nPOST /aggregation_profiles\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPOST BODY\n\n\n{\n   \nname\n: \nnew_aggregation_profile\n,\n   \nnamespace\n: \ntest\n,\n   \nendpoint_group\n: \nsites\n,\n   \nmetric_operation\n: \nAND\n,\n   \nprofile_operation\n: \nAND\n,\n   \nmetric_profile\n: {\n    \nname\n: \ntest.metric.profile\n,\n    \nid\n: \n5637d684-1f8e-4a02-a502-720e8f11e432\n\n   },\n   \ngroups\n: [\n    {\n     \nname\n: \ncompute\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEA\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICEB\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nimages\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEC\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICED\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    }\n   ]\n  }\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nAggregation Profile successfully created\n,\n  \ncode\n: \n201\n\n },\n \ndata\n: {\n  \nid\n: \n{{ID}}\n,\n  \nlinks\n: {\n   \nself\n: \nhttps:///api/v2/aggregation_profiles/{{ID}}\n\n  }\n }\n}\n\n\n\n\n\n\nPUT: Update information on an existing aggregation profile\n\n\nThis method can be used to update information on an existing aggregation profile\n\n\nInput\n\n\nPUT /aggregation_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPUT BODY\n\n\n{\n   \nname\n: \nupdated_profile\n,\n   \nnamespace\n: \ntest\n,\n   \nendpoint_group\n: \nsites\n,\n   \nmetric_operation\n: \nAND\n,\n   \nprofile_operation\n: \nAND\n,\n   \nmetric_profile\n: {\n    \nname\n: \ntest.metric.profile\n,\n    \nid\n: \n5637d684-1f8e-4a02-a502-720e8f11e432\n\n   },\n   \ngroups\n: [\n    {\n     \nname\n: \ncompute\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEA\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICEB\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nimages\n,\n     \noperation\n: \nOR\n,\n     \nservices\n: [\n      {\n       \nname\n: \nSERVICEC\n,\n       \noperation\n: \nAND\n\n      },\n      {\n       \nname\n: \nSERVICED\n,\n       \noperation\n: \nAND\n\n      }\n     ]\n    }\n   ]\n  }\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nAggregation Profile successfully updated\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: {\n  \nid\n: \n{{ID}}\n,\n  \nlinks\n: {\n   \nself\n: \nhttps:///api/v2/aggregation_profiles/{{ID}}\n\n  }\n }\n}\n\n\n\n\n\n\nDELETE: Delete an existing aggregation profile\n\n\nThis method can be used to delete an existing aggregation profile\n\n\nInput\n\n\nDELETE /aggregation_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nAggregation Profile Successfully Deleted\n,\n  \ncode\n: \n200\n\n }\n}", 
            "title": "Aggregation Profiles"
        }, 
        {
            "location": "/aggregation_profiles/#api-calls", 
            "text": "Name  Description  Shortcut      GET: List Aggregation Profile Requests  This method can be used to retrieve a list of current aggregation profiles.   Description    GET: List a specific  aggregation profile  This method can be used to retrieve a specific  aggregation profile based on its id.   Description    POST: Create a new  aggregation profile  This method can be used to create a new  aggregation profile   Description    PUT: Update an aggregation profile  This method can be used to update information on an existing  aggregation profile   Description    DELETE: Delete an  aggregation profile  This method can be used to delete an existing  aggregation profile   Description", 
            "title": "API Calls"
        }, 
        {
            "location": "/aggregation_profiles/#get-list-aggregation-profiles", 
            "text": "This method can be used to retrieve a list of current  aggregation profiles", 
            "title": "GET: List Aggregation Profiles"
        }, 
        {
            "location": "/aggregation_profiles/#input", 
            "text": "GET /aggregation_profiles  Optional Query Parameters     Type  Description  Required      name  aggregation profile name to be used as query  NO     Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/aggregation_profiles/#response", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50c ,\n    name :  cloud ,\n    namespace :  test ,\n    endpoint_group :  sites ,\n    metric_operation :  AND ,\n    profile_operation :  AND ,\n    metric_profile : {\n     name :  roc.critical ,\n     id :  5637d684-1f8e-4a02-a502-720e8f11e432 \n   },\n    groups : [\n    {\n      name :  compute ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEA ,\n        operation :  AND \n      },\n      {\n        name :  SERVICEB ,\n        operation :  AND \n      }\n     ]\n    },\n    {\n      name :  images ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEC ,\n        operation :  AND \n      },\n      {\n        name :  SERVICED ,\n        operation :  AND \n      }\n     ]\n    }\n   ]\n  },\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    name :  critical ,\n    namespace :  test ,\n    endpoint_group :  sites ,\n    metric_operation :  AND ,\n    profile_operation :  AND ,\n    metric_profile : {\n     name :  roc.critical ,\n     id :  5637d684-1f8e-4a02-a502-720e8f11e432 \n   },\n    groups : [\n    {\n      name :  compute ,\n      operation :  OR ,\n      services : [\n      {\n        name :  CREAM-CE ,\n        operation :  AND \n      },\n      {\n        name :  ARC-CE ,\n        operation :  AND \n      }\n     ]\n    },\n    {\n      name :  storage ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SRMv2 ,\n        operation :  AND \n      },\n      {\n        name :  SRM ,\n        operation :  AND \n      }\n     ]\n    }\n   ]\n  }\n ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/aggregation_profiles/#get-list-a-specific-aggregation-profile", 
            "text": "This method can be used to retrieve specific aggregation profile based on its id", 
            "title": "GET: List A Specific Aggregation profile"
        }, 
        {
            "location": "/aggregation_profiles/#input_1", 
            "text": "GET /aggregation_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/aggregation_profiles/#response_1", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50c ,\n    name :  cloud ,\n    namespace :  test ,\n    endpoint_group :  sites ,\n    metric_operation :  AND ,\n    profile_operation :  AND ,\n    metric_profile : {\n     name :  roc.critical ,\n     id :  5637d684-1f8e-4a02-a502-720e8f11e432 \n   },\n    groups : [\n    {\n      name :  compute ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEA ,\n        operation :  AND \n      },\n      {\n        name :  SERVICEB ,\n        operation :  AND \n      }\n     ]\n    },\n    {\n      name :  images ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEC ,\n        operation :  AND \n      },\n      {\n        name :  SERVICED ,\n        operation :  AND \n      }\n     ]\n    }\n   ]\n  }\n ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/aggregation_profiles/#post-create-a-new-aggregation-profile", 
            "text": "This method can be used to insert a new aggregation profile", 
            "title": "POST: Create a new Aggregation Profile"
        }, 
        {
            "location": "/aggregation_profiles/#input_2", 
            "text": "POST /aggregation_profiles  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  POST BODY  {\n    name :  new_aggregation_profile ,\n    namespace :  test ,\n    endpoint_group :  sites ,\n    metric_operation :  AND ,\n    profile_operation :  AND ,\n    metric_profile : {\n     name :  test.metric.profile ,\n     id :  5637d684-1f8e-4a02-a502-720e8f11e432 \n   },\n    groups : [\n    {\n      name :  compute ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEA ,\n        operation :  AND \n      },\n      {\n        name :  SERVICEB ,\n        operation :  AND \n      }\n     ]\n    },\n    {\n      name :  images ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEC ,\n        operation :  AND \n      },\n      {\n        name :  SERVICED ,\n        operation :  AND \n      }\n     ]\n    }\n   ]\n  }", 
            "title": "Input"
        }, 
        {
            "location": "/aggregation_profiles/#response_2", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Aggregation Profile successfully created ,\n   code :  201 \n },\n  data : {\n   id :  {{ID}} ,\n   links : {\n    self :  https:///api/v2/aggregation_profiles/{{ID}} \n  }\n }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/aggregation_profiles/#put-update-information-on-an-existing-aggregation-profile", 
            "text": "This method can be used to update information on an existing aggregation profile", 
            "title": "PUT: Update information on an existing aggregation profile"
        }, 
        {
            "location": "/aggregation_profiles/#input_3", 
            "text": "PUT /aggregation_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  PUT BODY  {\n    name :  updated_profile ,\n    namespace :  test ,\n    endpoint_group :  sites ,\n    metric_operation :  AND ,\n    profile_operation :  AND ,\n    metric_profile : {\n     name :  test.metric.profile ,\n     id :  5637d684-1f8e-4a02-a502-720e8f11e432 \n   },\n    groups : [\n    {\n      name :  compute ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEA ,\n        operation :  AND \n      },\n      {\n        name :  SERVICEB ,\n        operation :  AND \n      }\n     ]\n    },\n    {\n      name :  images ,\n      operation :  OR ,\n      services : [\n      {\n        name :  SERVICEC ,\n        operation :  AND \n      },\n      {\n        name :  SERVICED ,\n        operation :  AND \n      }\n     ]\n    }\n   ]\n  }", 
            "title": "Input"
        }, 
        {
            "location": "/aggregation_profiles/#response_3", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Aggregation Profile successfully updated ,\n   code :  200 \n },\n  data : {\n   id :  {{ID}} ,\n   links : {\n    self :  https:///api/v2/aggregation_profiles/{{ID}} \n  }\n }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/aggregation_profiles/#delete-delete-an-existing-aggregation-profile", 
            "text": "This method can be used to delete an existing aggregation profile", 
            "title": "DELETE: Delete an existing aggregation profile"
        }, 
        {
            "location": "/aggregation_profiles/#input_4", 
            "text": "DELETE /aggregation_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/aggregation_profiles/#response_4", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Aggregation Profile Successfully Deleted ,\n   code :  200 \n }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/operations_profiles/", 
            "text": "API Calls\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Operations Profile Requests\n\n\nThis method can be used to retrieve a list of current Operations profiles.\n\n\n Description\n\n\n\n\n\n\nGET: List a specific  Operations profile\n\n\nThis method can be used to retrieve a specific  Operations profile based on its id.\n\n\n Description\n\n\n\n\n\n\nPOST: Create a new  Operations profile\n\n\nThis method can be used to create a new  Operations profile\n\n\n Description\n\n\n\n\n\n\nPUT: Update an Operations profile\n\n\nThis method can be used to update information on an existing  Operations profile\n\n\n Description\n\n\n\n\n\n\nDELETE: Delete an  Operations profile\n\n\nThis method can be used to delete an existing  Operations profile\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGET: List AOperations Profiles\n\n\nThis method can be used to retrieve a list of current  Operations profiles\n\n\nInput\n\n\nGET /operations_profiles\n\n\n\n\nOptional Query Parameters\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nname\n\n\nOperations profile name to be used as query\n\n\nNO\n\n\n\n\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \nname\n: \nops1\n,\n   \navailable_states\n: [\n    \nA,B,C\n\n   ],\n   \ndefaults\n: {\n    \ndown\n: \nB\n,\n    \nmissing\n: \nA\n,\n    \nunknown\n: \nC\n\n   },\n   \noperations\n: [\n    {\n     \nname\n: \nAND\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nA\n,\n       \nb\n: \nB\n,\n       \nx\n: \nB\n\n      },\n      {\n       \na\n: \nA\n,\n       \nb\n: \nC\n,\n       \nx\n: \nC\n\n      },\n      {\n       \na\n: \nB\n,\n       \nb\n: \nC\n,\n       \nx\n: \nC\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nOR\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nA\n,\n       \nb\n: \nB\n,\n       \nx\n: \nA\n\n      },\n      {\n       \na\n: \nA\n,\n       \nb\n: \nC\n,\n       \nx\n: \nA\n\n      },\n      {\n       \na\n: \nB\n,\n       \nb\n: \nC\n,\n       \nx\n: \nB\n\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50c\n,\n   \nname\n: \nops2\n,\n   \navailable_states\n: [\n    \nX,Y,Z\n\n   ],\n   \ndefaults\n: {\n    \ndown\n: \nY\n,\n    \nmissing\n: \nX\n,\n    \nunknown\n: \nZ\n\n   },\n   \noperations\n: [\n    {\n     \nname\n: \nAND\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nX\n,\n       \nb\n: \nY\n,\n       \nx\n: \nY\n\n      },\n      {\n       \na\n: \nX\n,\n       \nb\n: \nZ\n,\n       \nx\n: \nZ\n\n      },\n      {\n       \na\n: \nY\n,\n       \nb\n: \nZ\n,\n       \nx\n: \nZ\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nOR\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nX\n,\n       \nb\n: \nY\n,\n       \nx\n: \nX\n\n      },\n      {\n       \na\n: \nX\n,\n       \nb\n: \nZ\n,\n       \nx\n: \nX\n\n      },\n      {\n       \na\n: \nY\n,\n       \nb\n: \nZ\n,\n       \nx\n: \nY\n\n      }\n     ]\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\nGET: List A Specific Operations profile\n\n\nThis method can be used to retrieve specific Operations profile based on its id\n\n\nInput\n\n\nGET /operations_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \nname\n: \nops1\n,\n   \navailable_states\n: [\n    \nA,B,C\n\n   ],\n   \ndefaults\n: {\n    \ndown\n: \nB\n,\n    \nmissing\n: \nA\n,\n    \nunknown\n: \nC\n\n   },\n   \noperations\n: [\n    {\n     \nname\n: \nAND\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nA\n,\n       \nb\n: \nB\n,\n       \nx\n: \nB\n\n      },\n      {\n       \na\n: \nA\n,\n       \nb\n: \nC\n,\n       \nx\n: \nC\n\n      },\n      {\n       \na\n: \nB\n,\n       \nb\n: \nC\n,\n       \nx\n: \nC\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nOR\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nA\n,\n       \nb\n: \nB\n,\n       \nx\n: \nA\n\n      },\n      {\n       \na\n: \nA\n,\n       \nb\n: \nC\n,\n       \nx\n: \nA\n\n      },\n      {\n       \na\n: \nB\n,\n       \nb\n: \nC\n,\n       \nx\n: \nB\n\n      }\n     ]\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\nPOST: Create a new Operations Profile\n\n\nThis method can be used to insert a new operations profile\n\n\nInput\n\n\nPOST /operations_profiles\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPOST BODY\n\n\n{\n   \nname\n: \ntops1\n,\n   \navailable_states\n: [\n    \nA\n,\nB\n,\nC\n\n   ],\n   \ndefaults\n: {\n    \ndown\n: \nB\n,\n    \nmissing\n: \nA\n,\n    \nunknown\n: \nC\n\n   },\n   \noperations\n: [\n    {\n     \nname\n: \nAND\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nA\n,\n       \nb\n: \nB\n,\n       \nx\n: \nB\n\n      },\n      {\n       \na\n: \nA\n,\n       \nb\n: \nC\n,\n       \nx\n: \nC\n\n      },\n      {\n       \na\n: \nB\n,\n       \nb\n: \nC\n,\n       \nx\n: \nC\n\n      }\n     ]\n    },\n    {\n     \nname\n: \nOR\n,\n     \ntruth_table\n: [\n      {\n       \na\n: \nA\n,\n       \nb\n: \nB\n,\n       \nx\n: \nA\n\n      },\n      {\n       \na\n: \nA\n,\n       \nb\n: \nC\n,\n       \nx\n: \nA\n\n      },\n      {\n       \na\n: \nB\n,\n       \nb\n: \nC\n,\n       \nx\n: \nB\n\n      }\n     ]\n    }\n   ]\n  }\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 201 Created\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nOperations Profile successfully created\n,\n  \ncode\n: \n201\n\n },\n \ndata\n: {\n  \nid\n: \n{{ID}}\n,\n  \nlinks\n: {\n   \nself\n: \nhttps:///api/v2/operations_profiles/{{ID}}\n\n  }\n }\n}\n\n\n\n\n\n\nPUT: Update information on an existing operations profile\n\n\nThis method can be used to update information on an existing operations profile\n\n\nInput\n\n\nPUT /operations_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPUT BODY\n\n\n{\n     \nname\n: \ntops1\n,\n     \navailable_states\n: [\n        \nA\n,\nB\n,\nC\n\n     ],\n     \ndefaults\n: {\n        \ndown\n: \nB\n,\n        \nmissing\n: \nA\n,\n        \nunknown\n: \nC\n\n     },\n     \noperations\n: [\n        {\n         \nname\n: \nAND\n,\n         \ntruth_table\n: [\n            {\n             \na\n: \nA\n,\n             \nb\n: \nB\n,\n             \nx\n: \nB\n\n            },\n            {\n             \na\n: \nA\n,\n             \nb\n: \nC\n,\n             \nx\n: \nC\n\n            },\n            {\n             \na\n: \nB\n,\n             \nb\n: \nC\n,\n             \nx\n: \nC\n\n            }\n         ]\n        },\n        {\n         \nname\n: \nOR\n,\n         \ntruth_table\n: [\n            {\n             \na\n: \nA\n,\n             \nb\n: \nB\n,\n             \nx\n: \nA\n\n            },\n            {\n             \na\n: \nA\n,\n             \nb\n: \nC\n,\n             \nx\n: \nA\n\n            },\n            {\n             \na\n: \nB\n,\n             \nb\n: \nC\n,\n             \nx\n: \nB\n\n            }\n         ]\n        }\n     ]\n    }\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nOperations Profile successfully updated\n,\n  \ncode\n: \n200\n\n }\n}\n\n\n\n\n\n\nDELETE: Delete an existing aggregation profile\n\n\nThis method can be used to delete an existing aggregation profile\n\n\nInput\n\n\nDELETE /operations_profiles/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nOperations Profile Successfully Deleted\n,\n  \ncode\n: \n200\n\n }\n}\n\n\n\n\nValidation Checks\n\n\nWhen submitting or updating a new operations profile, validation checks are performed on json POST/PUT body for the following cases:\n - Check if user has defined more than once a state name in available states list\n - Check if user has defined more than once an operation name in operations list\n - Check if user used an undefined state in operations\n - Check if truth table statements are adequate to handle all cases\n\n\nWhen an invalid operations profile is submitted the api responds with a validation error list:\n\n\nExample invalid profile\n\n\njson\n{\n   \"name\": \"ops1\",\n   \"available_states\": [\n    \"A\",\"B\",\"C\",\"C\"\n   ],\n   \"defaults\": {\n    \"down\": \"B\",\n    \"missing\": \"FOO\",\n    \"unknown\": \"C\"\n   },\n   \"operations\": [\n    {\n     \"name\": \"AND\",\n     \"truth_table\": [\n      {\n       \"a\": \"A\",\n       \"b\": \"B\",\n       \"x\": \"B\"\n      },\n      {\n       \"a\": \"A\",\n       \"b\": \"C\",\n       \"x\": \"C\"\n      },\n      {\n       \"a\": \"B\",\n       \"b\": \"BAR\",\n       \"x\": \"C\"\n      }\n     ]\n    },\n    {\n     \"name\": \"OR\",\n     \"truth_table\": [\n      {\n       \"a\": \"A\",\n       \"b\": \"B\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"A\",\n       \"b\": \"C\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"B\",\n       \"b\": \"CAR\",\n       \"x\": \"B\"\n      }\n     ]\n    },\n    {\n     \"name\": \"OR\",\n     \"truth_table\": [\n      {\n       \"a\": \"A\",\n       \"b\": \"B\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"A\",\n       \"b\": \"C\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"B\",\n       \"b\": \"C\",\n       \"x\": \"B\"\n      }\n     ]\n    }\n   ]\n  }\n\n\nThe above profile definiton contains errors like: duplicate states, undefined states and unadequate statements in truth tables. Api response is the following:\n\n\nResponse\n\n\nHeaders: \nStatus: 422 Unprocessable Entity\n\n\nResponse body\n\n\njson\n {\n \"status\": {\n  \"message\": \"Validation Error\",\n  \"code\": \"422\"\n },\n \"errors\": [\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"State:C is duplicated\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Operation:OR is duplicated\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Default Missing State: FOO not in available States\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"In Operation: AND, statement member b: BAR contains undeclared state\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"In Operation: OR, statement member b: CAR contains undeclared state\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:A in operation: AND\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:B in operation: AND\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:C in operation: AND\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:A in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:B in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:C in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:A in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:B in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:C in operation: OR\"\n  }\n ]\n}", 
            "title": "Operations Profiles"
        }, 
        {
            "location": "/operations_profiles/#api-calls", 
            "text": "Name  Description  Shortcut      GET: List Operations Profile Requests  This method can be used to retrieve a list of current Operations profiles.   Description    GET: List a specific  Operations profile  This method can be used to retrieve a specific  Operations profile based on its id.   Description    POST: Create a new  Operations profile  This method can be used to create a new  Operations profile   Description    PUT: Update an Operations profile  This method can be used to update information on an existing  Operations profile   Description    DELETE: Delete an  Operations profile  This method can be used to delete an existing  Operations profile   Description", 
            "title": "API Calls"
        }, 
        {
            "location": "/operations_profiles/#get-list-aoperations-profiles", 
            "text": "This method can be used to retrieve a list of current  Operations profiles", 
            "title": "GET: List AOperations Profiles"
        }, 
        {
            "location": "/operations_profiles/#input", 
            "text": "GET /operations_profiles  Optional Query Parameters     Type  Description  Required      name  Operations profile name to be used as query  NO     Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/operations_profiles/#response", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    name :  ops1 ,\n    available_states : [\n     A,B,C \n   ],\n    defaults : {\n     down :  B ,\n     missing :  A ,\n     unknown :  C \n   },\n    operations : [\n    {\n      name :  AND ,\n      truth_table : [\n      {\n        a :  A ,\n        b :  B ,\n        x :  B \n      },\n      {\n        a :  A ,\n        b :  C ,\n        x :  C \n      },\n      {\n        a :  B ,\n        b :  C ,\n        x :  C \n      }\n     ]\n    },\n    {\n      name :  OR ,\n      truth_table : [\n      {\n        a :  A ,\n        b :  B ,\n        x :  A \n      },\n      {\n        a :  A ,\n        b :  C ,\n        x :  A \n      },\n      {\n        a :  B ,\n        b :  C ,\n        x :  B \n      }\n     ]\n    }\n   ]\n  },\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50c ,\n    name :  ops2 ,\n    available_states : [\n     X,Y,Z \n   ],\n    defaults : {\n     down :  Y ,\n     missing :  X ,\n     unknown :  Z \n   },\n    operations : [\n    {\n      name :  AND ,\n      truth_table : [\n      {\n        a :  X ,\n        b :  Y ,\n        x :  Y \n      },\n      {\n        a :  X ,\n        b :  Z ,\n        x :  Z \n      },\n      {\n        a :  Y ,\n        b :  Z ,\n        x :  Z \n      }\n     ]\n    },\n    {\n      name :  OR ,\n      truth_table : [\n      {\n        a :  X ,\n        b :  Y ,\n        x :  X \n      },\n      {\n        a :  X ,\n        b :  Z ,\n        x :  X \n      },\n      {\n        a :  Y ,\n        b :  Z ,\n        x :  Y \n      }\n     ]\n    }\n   ]\n  }\n ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/operations_profiles/#get-list-a-specific-operations-profile", 
            "text": "This method can be used to retrieve specific Operations profile based on its id", 
            "title": "GET: List A Specific Operations profile"
        }, 
        {
            "location": "/operations_profiles/#input_1", 
            "text": "GET /operations_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/operations_profiles/#response_1", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    name :  ops1 ,\n    available_states : [\n     A,B,C \n   ],\n    defaults : {\n     down :  B ,\n     missing :  A ,\n     unknown :  C \n   },\n    operations : [\n    {\n      name :  AND ,\n      truth_table : [\n      {\n        a :  A ,\n        b :  B ,\n        x :  B \n      },\n      {\n        a :  A ,\n        b :  C ,\n        x :  C \n      },\n      {\n        a :  B ,\n        b :  C ,\n        x :  C \n      }\n     ]\n    },\n    {\n      name :  OR ,\n      truth_table : [\n      {\n        a :  A ,\n        b :  B ,\n        x :  A \n      },\n      {\n        a :  A ,\n        b :  C ,\n        x :  A \n      },\n      {\n        a :  B ,\n        b :  C ,\n        x :  B \n      }\n     ]\n    }\n   ]\n  }\n ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/operations_profiles/#post-create-a-new-operations-profile", 
            "text": "This method can be used to insert a new operations profile", 
            "title": "POST: Create a new Operations Profile"
        }, 
        {
            "location": "/operations_profiles/#input_2", 
            "text": "POST /operations_profiles  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  POST BODY  {\n    name :  tops1 ,\n    available_states : [\n     A , B , C \n   ],\n    defaults : {\n     down :  B ,\n     missing :  A ,\n     unknown :  C \n   },\n    operations : [\n    {\n      name :  AND ,\n      truth_table : [\n      {\n        a :  A ,\n        b :  B ,\n        x :  B \n      },\n      {\n        a :  A ,\n        b :  C ,\n        x :  C \n      },\n      {\n        a :  B ,\n        b :  C ,\n        x :  C \n      }\n     ]\n    },\n    {\n      name :  OR ,\n      truth_table : [\n      {\n        a :  A ,\n        b :  B ,\n        x :  A \n      },\n      {\n        a :  A ,\n        b :  C ,\n        x :  A \n      },\n      {\n        a :  B ,\n        b :  C ,\n        x :  B \n      }\n     ]\n    }\n   ]\n  }", 
            "title": "Input"
        }, 
        {
            "location": "/operations_profiles/#response_2", 
            "text": "Headers:  Status: 201 Created  Response body  Json Response  {\n  status : {\n   message :  Operations Profile successfully created ,\n   code :  201 \n },\n  data : {\n   id :  {{ID}} ,\n   links : {\n    self :  https:///api/v2/operations_profiles/{{ID}} \n  }\n }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/operations_profiles/#put-update-information-on-an-existing-operations-profile", 
            "text": "This method can be used to update information on an existing operations profile", 
            "title": "PUT: Update information on an existing operations profile"
        }, 
        {
            "location": "/operations_profiles/#input_3", 
            "text": "PUT /operations_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  PUT BODY  {\n      name :  tops1 ,\n      available_states : [\n         A , B , C \n     ],\n      defaults : {\n         down :  B ,\n         missing :  A ,\n         unknown :  C \n     },\n      operations : [\n        {\n          name :  AND ,\n          truth_table : [\n            {\n              a :  A ,\n              b :  B ,\n              x :  B \n            },\n            {\n              a :  A ,\n              b :  C ,\n              x :  C \n            },\n            {\n              a :  B ,\n              b :  C ,\n              x :  C \n            }\n         ]\n        },\n        {\n          name :  OR ,\n          truth_table : [\n            {\n              a :  A ,\n              b :  B ,\n              x :  A \n            },\n            {\n              a :  A ,\n              b :  C ,\n              x :  A \n            },\n            {\n              a :  B ,\n              b :  C ,\n              x :  B \n            }\n         ]\n        }\n     ]\n    }", 
            "title": "Input"
        }, 
        {
            "location": "/operations_profiles/#response_3", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Operations Profile successfully updated ,\n   code :  200 \n }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/operations_profiles/#delete-delete-an-existing-aggregation-profile", 
            "text": "This method can be used to delete an existing aggregation profile", 
            "title": "DELETE: Delete an existing aggregation profile"
        }, 
        {
            "location": "/operations_profiles/#input_4", 
            "text": "DELETE /operations_profiles/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/operations_profiles/#response_4", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Operations Profile Successfully Deleted ,\n   code :  200 \n }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/operations_profiles/#validation-checks", 
            "text": "When submitting or updating a new operations profile, validation checks are performed on json POST/PUT body for the following cases:\n - Check if user has defined more than once a state name in available states list\n - Check if user has defined more than once an operation name in operations list\n - Check if user used an undefined state in operations\n - Check if truth table statements are adequate to handle all cases  When an invalid operations profile is submitted the api responds with a validation error list:  Example invalid profile  json\n{\n   \"name\": \"ops1\",\n   \"available_states\": [\n    \"A\",\"B\",\"C\",\"C\"\n   ],\n   \"defaults\": {\n    \"down\": \"B\",\n    \"missing\": \"FOO\",\n    \"unknown\": \"C\"\n   },\n   \"operations\": [\n    {\n     \"name\": \"AND\",\n     \"truth_table\": [\n      {\n       \"a\": \"A\",\n       \"b\": \"B\",\n       \"x\": \"B\"\n      },\n      {\n       \"a\": \"A\",\n       \"b\": \"C\",\n       \"x\": \"C\"\n      },\n      {\n       \"a\": \"B\",\n       \"b\": \"BAR\",\n       \"x\": \"C\"\n      }\n     ]\n    },\n    {\n     \"name\": \"OR\",\n     \"truth_table\": [\n      {\n       \"a\": \"A\",\n       \"b\": \"B\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"A\",\n       \"b\": \"C\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"B\",\n       \"b\": \"CAR\",\n       \"x\": \"B\"\n      }\n     ]\n    },\n    {\n     \"name\": \"OR\",\n     \"truth_table\": [\n      {\n       \"a\": \"A\",\n       \"b\": \"B\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"A\",\n       \"b\": \"C\",\n       \"x\": \"A\"\n      },\n      {\n       \"a\": \"B\",\n       \"b\": \"C\",\n       \"x\": \"B\"\n      }\n     ]\n    }\n   ]\n  }  The above profile definiton contains errors like: duplicate states, undefined states and unadequate statements in truth tables. Api response is the following:", 
            "title": "Validation Checks"
        }, 
        {
            "location": "/operations_profiles/#response_5", 
            "text": "Headers:  Status: 422 Unprocessable Entity  Response body  json\n {\n \"status\": {\n  \"message\": \"Validation Error\",\n  \"code\": \"422\"\n },\n \"errors\": [\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"State:C is duplicated\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Operation:OR is duplicated\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Default Missing State: FOO not in available States\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"In Operation: AND, statement member b: BAR contains undeclared state\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"In Operation: OR, statement member b: CAR contains undeclared state\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:A in operation: AND\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:B in operation: AND\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:C in operation: AND\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:A in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:B in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:C in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:A in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:B in operation: OR\"\n  },\n  {\n   \"message\": \"Validation Failed\",\n   \"code\": \"422\",\n   \"details\": \"Not enough mentions of state:C in operation: OR\"\n  }\n ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/reports/", 
            "text": "API Calls\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List reports or single report\n\n\nThis method can be used to retrieve a list of existing reports\n\n\n Description\n\n\n\n\n\n\nPOST: Create a new report\n\n\nThis method can be used to create a new report.\n\n\n Description\n\n\n\n\n\n\nPUT: Update an existing report\n\n\nThis method can be used to update an existing report.\n\n\n Description\n\n\n\n\n\n\nDELETE: Delete an existing Report\n\n\nThis method can be used to delete an existing report.\n\n\n Description\n\n\n\n\n\n\n\n\n\n\nGET: List Recomputation Requests\n\n\nThis method can be used to retrieve a list of existing reports or a single report according to its ID.\n\n\nInput\n\n\nURL\n\n\n/reports\nor\n/reports/{id}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n    \nstatus\n: {\n        \nmessage\n: \nSuccess\n,\n        \ncode\n: \n200\n\n    },\n    \ndata\n: [\n        {\n            \nid\n: \neba61a9e-22e9-4521-9e47-ecaa4a494364\n,\n            \ninfo\n: {\n                \nname\n: \nReport_A\n,\n                \ndescription\n: \nreport aaaaa\n,\n                \ncreated\n: \n2015-9-10 13:43:00\n,\n                \nupdated\n: \n2015-10-11 13:43:00\n\n            },\n            \ntopology_schema\n: {\n                \ngroup\n: {\n                    \ntype\n: \nNGI\n,\n                    \ngroup\n: {\n                        \ntype\n: \nSITE\n\n                    }\n                }\n            },\n            \nprofiles\n: [\n                {\n                    \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n                    \nname\n: \nprofile1\n,\n                    \ntype\n: \nmetric\n\n                },\n                {\n                    \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e523\n,\n                    \nname\n: \nprofile2\n,\n                    \ntype\n: \noperations\n\n                },\n                {\n                    \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50q\n,\n                    \nname\n: \nprofile3\n,\n                    \ntype\n: \naggregation\n\n                }\n            ],\n            \nfilter_tags\n: [\n                {\n                    \nname\n: \nname1\n,\n                    \nvalue\n: \nvalue1\n\n                },\n                {\n                    \nname\n: \nname2\n,\n                    \nvalue\n: \nvalue2\n\n                }\n            ]\n        }\n    ]\n}\n\n\n\n\n\n\nPOST: Create a new report\n\n\nThis method can be used to create a new report\n\n\nInput\n\n\nURL\n\n\n/reports\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nRequest Body\n\n\n{\n    \ninfo\n: {\n        \nname\n: \nReport_A\n,\n        \ndescription\n: \nreport aaaaa\n\n    },\n    \ntopology_schema\n: {\n        \ngroup\n: {\n            \ntype\n: \nngi\n,\n            \ngroup\n: {\n                \ntype\n: \nsite\n\n            }\n        }\n    },\n    \nprofiles\n: [\n        {\n            \nid\n:\n422985a7-6386-4964-bc99-5ebd5d7b0aef\n,\n            \ntype\n: \nmetric\n\n        },\n        {\n            \nid\n: \n1aa74849-2310-4bbc-b63a-8995ac7888ea\n,\n            \ntype\n: \naggregation\n\n        },\n        {\n            \nid\n: \n1eafbdd1-1bbc-4861-b849-65394840762\n,\n            \ntype\n: \noperations\n\n        }\n    ],\n    \nfilter_tags\n: [\n        {\n            \nname\n: \nproduction\n,\n            \nvalue\n: \nN\n\n        },\n        {\n            \nname\n: \nmonitored\n,\n            \nvalue\n: \nY\n\n        }\n    ]\n}\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 201 Created\n\n\nResponse Body\n\n\n{\n    \nstatus\n: {\n        \nmessage\n: \nSuccessfully Created Report\n,\n        \ncode\n: \n201\n\n    },\n    \ndata\n: {\n        \nid\n: \neba61a9e-22e9-4521-9e47-ecaa4a494360\n,\n        \nlinks\n: {\n            \nself\n: \nhttps://myapi.test.com/api/v2/reports/eba61a9e-22e9-4521-9e47-ecaa4a494360\n\n        }\n    }\n}\n\n\n\n\n\n\nPUT: Update an existing report\n\n\nThis method can be used to update an existing report. This will replace all the fields in the record so all the old fields that need to be kept must be included in the json of the update request body\n\n\nInput\n\n\nURL\n\n\n/reports/{id}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nRequest Body\n\n\n{\n    \ninfo\n: {\n        \nname\n: \nnewname\n,\n        \ndescription\n: \nnewdescription\n,\n    },\n    \ntopology_schema\n: {\n        \ngroup\n: {\n            \ntype\n: \nngi\n,\n            \ngroup\n: {\n                \ntype\n: \nfight\n\n            }\n        }\n    },\n    \nprofiles\n: [\n        {\n            \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n            \ntype\n: \nmetric\n,\n            \nname\n: \nprofile1\n\n        },\n        {\n            \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e523\n,\n            \ntype\n: \noperations\n,\n            \nname\n: \nprofile2\n\n        },\n        {\n            \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50bq\n,\n            \ntype\n: \naggregation\n,\n            \nname\n: \nprofile3\n\n        }\n    ],\n    \nfilter_tags\n: [\n        {\n            \nname\n: \nproduction\n,\n            \nvalue\n: \nN\n\n        },\n        {\n            \nname\n: \nmonitored\n,\n            \nvalue\n: \nN\n\n        }\n    ]\n}\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse Body\n\n\n{\n    \nstatus\n: {\n        \nmessage\n: \nReport was successfully updated\n,\n        \ncode\n: \n200\n\n    }\n}\n\n\n\n\n\n\nDELETE: Delete an existing report\n\n\nThis method can be used to update an existing report\n\n\nInput\n\n\nURL\n\n\n/reports/{id}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse Body\n\n\n{\n    \nstatus\n: {\n        \nmessage\n: \nReport was successfully deleted\n,\n        \ncode\n: \n200\n\n    }\n}", 
            "title": "Reports"
        }, 
        {
            "location": "/reports/#api-calls", 
            "text": "Name  Description  Shortcut      GET: List reports or single report  This method can be used to retrieve a list of existing reports   Description    POST: Create a new report  This method can be used to create a new report.   Description    PUT: Update an existing report  This method can be used to update an existing report.   Description    DELETE: Delete an existing Report  This method can be used to delete an existing report.   Description", 
            "title": "API Calls"
        }, 
        {
            "location": "/reports/#get-list-recomputation-requests", 
            "text": "This method can be used to retrieve a list of existing reports or a single report according to its ID.", 
            "title": "GET: List Recomputation Requests"
        }, 
        {
            "location": "/reports/#input", 
            "text": "URL  /reports\nor\n/reports/{id}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/reports/#response", 
            "text": "Headers:  Status: 200 OK  Response body  Json Response  {\n     status : {\n         message :  Success ,\n         code :  200 \n    },\n     data : [\n        {\n             id :  eba61a9e-22e9-4521-9e47-ecaa4a494364 ,\n             info : {\n                 name :  Report_A ,\n                 description :  report aaaaa ,\n                 created :  2015-9-10 13:43:00 ,\n                 updated :  2015-10-11 13:43:00 \n            },\n             topology_schema : {\n                 group : {\n                     type :  NGI ,\n                     group : {\n                         type :  SITE \n                    }\n                }\n            },\n             profiles : [\n                {\n                     id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n                     name :  profile1 ,\n                     type :  metric \n                },\n                {\n                     id :  6ac7d684-1f8e-4a02-a502-720e8f11e523 ,\n                     name :  profile2 ,\n                     type :  operations \n                },\n                {\n                     id :  6ac7d684-1f8e-4a02-a502-720e8f11e50q ,\n                     name :  profile3 ,\n                     type :  aggregation \n                }\n            ],\n             filter_tags : [\n                {\n                     name :  name1 ,\n                     value :  value1 \n                },\n                {\n                     name :  name2 ,\n                     value :  value2 \n                }\n            ]\n        }\n    ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/reports/#post-create-a-new-report", 
            "text": "This method can be used to create a new report", 
            "title": "POST: Create a new report"
        }, 
        {
            "location": "/reports/#input_1", 
            "text": "URL  /reports  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Request Body  {\n     info : {\n         name :  Report_A ,\n         description :  report aaaaa \n    },\n     topology_schema : {\n         group : {\n             type :  ngi ,\n             group : {\n                 type :  site \n            }\n        }\n    },\n     profiles : [\n        {\n             id : 422985a7-6386-4964-bc99-5ebd5d7b0aef ,\n             type :  metric \n        },\n        {\n             id :  1aa74849-2310-4bbc-b63a-8995ac7888ea ,\n             type :  aggregation \n        },\n        {\n             id :  1eafbdd1-1bbc-4861-b849-65394840762 ,\n             type :  operations \n        }\n    ],\n     filter_tags : [\n        {\n             name :  production ,\n             value :  N \n        },\n        {\n             name :  monitored ,\n             value :  Y \n        }\n    ]\n}", 
            "title": "Input"
        }, 
        {
            "location": "/reports/#response_1", 
            "text": "Headers:  Status: 201 Created  Response Body  {\n     status : {\n         message :  Successfully Created Report ,\n         code :  201 \n    },\n     data : {\n         id :  eba61a9e-22e9-4521-9e47-ecaa4a494360 ,\n         links : {\n             self :  https://myapi.test.com/api/v2/reports/eba61a9e-22e9-4521-9e47-ecaa4a494360 \n        }\n    }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/reports/#put-update-an-existing-report", 
            "text": "This method can be used to update an existing report. This will replace all the fields in the record so all the old fields that need to be kept must be included in the json of the update request body", 
            "title": "PUT: Update an existing report"
        }, 
        {
            "location": "/reports/#input_2", 
            "text": "URL  /reports/{id}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Request Body  {\n     info : {\n         name :  newname ,\n         description :  newdescription ,\n    },\n     topology_schema : {\n         group : {\n             type :  ngi ,\n             group : {\n                 type :  fight \n            }\n        }\n    },\n     profiles : [\n        {\n             id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n             type :  metric ,\n             name :  profile1 \n        },\n        {\n             id :  6ac7d684-1f8e-4a02-a502-720e8f11e523 ,\n             type :  operations ,\n             name :  profile2 \n        },\n        {\n             id :  6ac7d684-1f8e-4a02-a502-720e8f11e50bq ,\n             type :  aggregation ,\n             name :  profile3 \n        }\n    ],\n     filter_tags : [\n        {\n             name :  production ,\n             value :  N \n        },\n        {\n             name :  monitored ,\n             value :  N \n        }\n    ]\n}", 
            "title": "Input"
        }, 
        {
            "location": "/reports/#response_2", 
            "text": "Headers:  Status: 200 OK  Response Body  {\n     status : {\n         message :  Report was successfully updated ,\n         code :  200 \n    }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/reports/#delete-delete-an-existing-report", 
            "text": "This method can be used to update an existing report", 
            "title": "DELETE: Delete an existing report"
        }, 
        {
            "location": "/reports/#input_3", 
            "text": "URL  /reports/{id}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json", 
            "title": "Input"
        }, 
        {
            "location": "/reports/#response_3", 
            "text": "Headers:  Status: 200 OK  Response Body  {\n     status : {\n         message :  Report was successfully deleted ,\n         code :  200 \n    }\n}", 
            "title": "Response"
        }, 
        {
            "location": "/tenants/", 
            "text": "API Calls\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nShortcut\n\n\n\n\n\n\n\n\n\n\nGET: List Tenants\n\n\nThis method can be used to retrieve a list of current tenants\n\n\n Description\n\n\n\n\n\n\nGET: List a specific tenant\n\n\nThis method can be used to retrieve a specific metric tenant based on its id.\n\n\n Description\n\n\n\n\n\n\nPOST: Create a new tenant\n\n\nThis method can be used to create a new tenant\n\n\n Description\n\n\n\n\n\n\nPUT: Update a tenant\n\n\nThis method can be used to update information on an existing tenant\n\n\n Description\n\n\n\n\n\n\nDELETE: Delete a tenant\n\n\nThis method can be used to delete an existing tenant\n\n\n Description\n\n\n\n\n\n\n\n\n\n\nGET: List Tenants\n\n\nThis method can be used to retrieve a list of current tenants\n\n\nInput\n\n\nGET /admin/tenants\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \ninfo\n: {\n    \nname\n: \nTenant1\n,\n    \nemail\n: \nemail1@tenant1.com\n,\n    \nwebsite\n: \nwww.tenant1.com\n,\n    \ncreated\n: \n2015-10-20 02:08:04\n,\n    \nupdated\n: \n2015-10-20 02:08:04\n\n   },\n   \ndb_conf\n: [\n    {\n     \nstore\n: \nar\n,\n     \nserver\n: \na.mongodb.org\n,\n     \nport\n: 27017,\n     \ndatabase\n: \nar_db\n,\n     \nusername\n: \nadmin\n,\n     \npassword\n: \n3NCRYPT3D\n\n    },\n    {\n     \nstore\n: \nstatus\n,\n     \nserver\n: \nb.mongodb.org\n,\n     \nport\n: 27017,\n     \ndatabase\n: \nstatus_db\n,\n     \nusername\n: \nadmin\n,\n     \npassword\n: \n3NCRYPT3D\n\n    }\n   ],\n   \nusers\n: [\n    {\n     \nname\n: \ncap\n,\n     \nemail\n: \ncap@email.com\n,\n     \napi_key\n: \nC4PK3Y\n\n    },\n    {\n     \nname\n: \nthor\n,\n     \nemail\n: \nthor@email.com\n,\n     \napi_key\n: \nTH0RK3Y\n\n    }\n   ]\n  },\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50c\n,\n   \ninfo\n: {\n    \nname\n: \ntenant2\n,\n    \nemail\n: \ntenant2@email.com\n,\n    \nwebsite\n: \nwww.tenant2.com\n,\n    \ncreated\n: \n2015-10-20 02:08:04\n,\n    \nupdated\n: \n2015-10-20 02:08:04\n\n   },\n   \ndb_conf\n: [\n    {\n     \nstore\n: \nar\n,\n     \nserver\n: \na.mongodb.org\n,\n     \nport\n: 27017,\n     \ndatabase\n: \nar_db\n,\n     \nusername\n: \nadmin\n,\n     \npassword\n: \n3NCRYPT3D\n\n    },\n    {\n     \nstore\n: \nstatus\n,\n     \nserver\n: \nb.mongodb.org\n,\n     \nport\n: 27017,\n     \ndatabase\n: \nstatus_db\n,\n     \nusername\n: \nadmin\n,\n     \npassword\n: \n3NCRYPT3D\n\n    }\n   ],\n   \nusers\n: [\n    {\n     \nname\n: \ngroot\n,\n     \nemail\n: \ngroot@email.com\n,\n     \napi_key\n: \nGR00TK3Y\n\n    },\n    {\n     \nname\n: \nstarlord\n,\n     \nemail\n: \nstarlord@email.com\n,\n     \napi_key\n: \nST4RL0RDK3Y\n\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\nGET: List A Specific tenant\n\n\nThis method can be used to retrieve specific tenant based on its id\n\n\nInput\n\n\nGET /admin/tenants/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nSuccess\n,\n  \ncode\n: \n200\n\n },\n \ndata\n: [\n  {\n   \nid\n: \n6ac7d684-1f8e-4a02-a502-720e8f11e50b\n,\n   \ninfo\n: {\n    \nname\n: \nTenant1\n,\n    \nemail\n: \nemail1@tenant1.com\n,\n    \nwebsite\n: \nwww.tenant1.com\n,\n    \ncreated\n: \n2015-10-20 02:08:04\n,\n    \nupdated\n: \n2015-10-20 02:08:04\n\n   },\n   \ndb_conf\n: [\n    {\n     \nstore\n: \nar\n,\n     \nserver\n: \na.mongodb.org\n,\n     \nport\n: 27017,\n     \ndatabase\n: \nar_db\n,\n     \nusername\n: \nadmin\n,\n     \npassword\n: \n3NCRYPT3D\n\n    },\n    {\n     \nstore\n: \nstatus\n,\n     \nserver\n: \nb.mongodb.org\n,\n     \nport\n: 27017,\n     \ndatabase\n: \nstatus_db\n,\n     \nusername\n: \nadmin\n,\n     \npassword\n: \n3NCRYPT3D\n\n    }\n   ],\n   \nusers\n: [\n    {\n     \nname\n: \ncap\n,\n     \nemail\n: \ncap@email.com\n,\n     \napi_key\n: \nC4PK3Y\n\n    },\n    {\n     \nname\n: \nthor\n,\n     \nemail\n: \nthor@email.com\n,\n     \napi_key\n: \nTH0RK3Y\n\n    }\n   ]\n  }\n ]\n}\n\n\n\n\n\n\nPOST: Create a new Tenant\n\n\nThis method can be used to insert a new tenant\n\n\nInput\n\n\nPOST /admin/tenants\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPOST BODY\n\n\n{\n  \ninfo\n: {\n    \nname\n: \nTenant1\n,\n    \nemail\n: \nemail1@tenant1.com\n,\n    \nwebsite\n: \nwww.tenant1.com\n,\n    \ncreated\n: \n2015-10-20 02:08:04\n,\n    \nupdated\n: \n2015-10-20 02:08:04\n\n  },\n  \ndb_conf\n: [\n    {\n      \nstore\n: \nar\n,\n      \nserver\n: \na.mongodb.org\n,\n      \nport\n: 27017,\n      \ndatabase\n: \nar_db\n,\n      \nusername\n: \nadmin\n,\n      \npassword\n: \n3NCRYPT3D\n\n    },\n    {\n      \nstore\n: \nstatus\n,\n      \nserver\n: \nb.mongodb.org\n,\n      \nport\n: 27017,\n      \ndatabase\n: \nstatus_db\n,\n      \nusername\n: \nadmin\n,\n      \npassword\n: \n3NCRYPT3D\n\n    }\n  ],\n  \nusers\n: [\n    {\n      \nname\n: \ncap\n,\n      \nemail\n: \ncap@email.com\n,\n      \napi_key\n: \nC4PK3Y\n\n    },\n    {\n      \nname\n: \nthor\n,\n      \nemail\n: \nthor@email.com\n,\n      \napi_key\n: \nTH0RK3Y\n\n    }\n  ]\n}\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nTenant was succesfully created\n,\n  \ncode\n: \n201\n\n },\n \ndata\n: {\n  \nid\n: \n{{ID}}\n,\n  \nlinks\n: {\n   \nself\n: \nhttps:///api/v2/admin/tenants/{{ID}}\n\n  }\n }\n}\n\n\n\n\n\n\nPUT: Update information on an existing tenant\n\n\nThis method can be used to update information on an existing tenant\n\n\nInput\n\n\nPUT /admin/tenants/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nPUT BODY\n\n\n{\n  \ninfo\n: {\n    \nname\n: \nTenant1\n,\n    \nemail\n: \nemail1@tenant1.com\n,\n    \nwebsite\n: \nwww.tenant1.com\n,\n    \ncreated\n: \n2015-10-20 02:08:04\n,\n    \nupdated\n: \n2015-10-20 02:08:04\n\n  },\n  \ndb_conf\n: [\n    {\n      \nstore\n: \nar\n,\n      \nserver\n: \na.mongodb.org\n,\n      \nport\n: 27017,\n      \ndatabase\n: \nar_db\n,\n      \nusername\n: \nadmin\n,\n      \npassword\n: \n3NCRYPT3D\n\n    },\n    {\n      \nstore\n: \nstatus\n,\n      \nserver\n: \nb.mongodb.org\n,\n      \nport\n: 27017,\n      \ndatabase\n: \nstatus_db\n,\n      \nusername\n: \nadmin\n,\n      \npassword\n: \n3NCRYPT3D\n\n    }\n  ],\n  \nusers\n: [\n    {\n      \nname\n: \ncap\n,\n      \nemail\n: \ncap@email.com\n,\n      \napi_key\n: \nC4PK3Y\n\n    },\n    {\n      \nname\n: \nthor\n,\n      \nemail\n: \nthor@email.com\n,\n      \napi_key\n: \nTH0RK3Y\n\n    }\n  ]\n}\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nTenant successfully updated\n,\n  \ncode\n: \n200\n\n }\n}\n\n\n\n\n\n\nDELETE: Delete an existing tenant\n\n\nThis method can be used to delete an existing tenant\n\n\nInput\n\n\nDELETE /admin/tenants/{ID}\n\n\n\n\nRequest headers\n\n\nx-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n\n\n\n\nResponse\n\n\nHeaders: \nStatus: 200 OK\n\n\nResponse body\n\n\nJson Response\n\n\n{\n \nstatus\n: {\n  \nmessage\n: \nTenant Successfully Deleted\n,\n  \ncode\n: \n200\n\n }\n}", 
            "title": "Tenants"
        }, 
        {
            "location": "/tenants/#api-calls", 
            "text": "Name  Description  Shortcut      GET: List Tenants  This method can be used to retrieve a list of current tenants   Description    GET: List a specific tenant  This method can be used to retrieve a specific metric tenant based on its id.   Description    POST: Create a new tenant  This method can be used to create a new tenant   Description    PUT: Update a tenant  This method can be used to update information on an existing tenant   Description    DELETE: Delete a tenant  This method can be used to delete an existing tenant   Description", 
            "title": "API Calls"
        }, 
        {
            "location": "/tenants/#get-list-tenants", 
            "text": "This method can be used to retrieve a list of current tenants  Input  GET /admin/tenants  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    info : {\n     name :  Tenant1 ,\n     email :  email1@tenant1.com ,\n     website :  www.tenant1.com ,\n     created :  2015-10-20 02:08:04 ,\n     updated :  2015-10-20 02:08:04 \n   },\n    db_conf : [\n    {\n      store :  ar ,\n      server :  a.mongodb.org ,\n      port : 27017,\n      database :  ar_db ,\n      username :  admin ,\n      password :  3NCRYPT3D \n    },\n    {\n      store :  status ,\n      server :  b.mongodb.org ,\n      port : 27017,\n      database :  status_db ,\n      username :  admin ,\n      password :  3NCRYPT3D \n    }\n   ],\n    users : [\n    {\n      name :  cap ,\n      email :  cap@email.com ,\n      api_key :  C4PK3Y \n    },\n    {\n      name :  thor ,\n      email :  thor@email.com ,\n      api_key :  TH0RK3Y \n    }\n   ]\n  },\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50c ,\n    info : {\n     name :  tenant2 ,\n     email :  tenant2@email.com ,\n     website :  www.tenant2.com ,\n     created :  2015-10-20 02:08:04 ,\n     updated :  2015-10-20 02:08:04 \n   },\n    db_conf : [\n    {\n      store :  ar ,\n      server :  a.mongodb.org ,\n      port : 27017,\n      database :  ar_db ,\n      username :  admin ,\n      password :  3NCRYPT3D \n    },\n    {\n      store :  status ,\n      server :  b.mongodb.org ,\n      port : 27017,\n      database :  status_db ,\n      username :  admin ,\n      password :  3NCRYPT3D \n    }\n   ],\n    users : [\n    {\n      name :  groot ,\n      email :  groot@email.com ,\n      api_key :  GR00TK3Y \n    },\n    {\n      name :  starlord ,\n      email :  starlord@email.com ,\n      api_key :  ST4RL0RDK3Y \n    }\n   ]\n  }\n ]\n}", 
            "title": "GET: List Tenants"
        }, 
        {
            "location": "/tenants/#get-list-a-specific-tenant", 
            "text": "This method can be used to retrieve specific tenant based on its id  Input  GET /admin/tenants/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Success ,\n   code :  200 \n },\n  data : [\n  {\n    id :  6ac7d684-1f8e-4a02-a502-720e8f11e50b ,\n    info : {\n     name :  Tenant1 ,\n     email :  email1@tenant1.com ,\n     website :  www.tenant1.com ,\n     created :  2015-10-20 02:08:04 ,\n     updated :  2015-10-20 02:08:04 \n   },\n    db_conf : [\n    {\n      store :  ar ,\n      server :  a.mongodb.org ,\n      port : 27017,\n      database :  ar_db ,\n      username :  admin ,\n      password :  3NCRYPT3D \n    },\n    {\n      store :  status ,\n      server :  b.mongodb.org ,\n      port : 27017,\n      database :  status_db ,\n      username :  admin ,\n      password :  3NCRYPT3D \n    }\n   ],\n    users : [\n    {\n      name :  cap ,\n      email :  cap@email.com ,\n      api_key :  C4PK3Y \n    },\n    {\n      name :  thor ,\n      email :  thor@email.com ,\n      api_key :  TH0RK3Y \n    }\n   ]\n  }\n ]\n}", 
            "title": "GET: List A Specific tenant"
        }, 
        {
            "location": "/tenants/#post-create-a-new-tenant", 
            "text": "This method can be used to insert a new tenant  Input  POST /admin/tenants  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  POST BODY  {\n   info : {\n     name :  Tenant1 ,\n     email :  email1@tenant1.com ,\n     website :  www.tenant1.com ,\n     created :  2015-10-20 02:08:04 ,\n     updated :  2015-10-20 02:08:04 \n  },\n   db_conf : [\n    {\n       store :  ar ,\n       server :  a.mongodb.org ,\n       port : 27017,\n       database :  ar_db ,\n       username :  admin ,\n       password :  3NCRYPT3D \n    },\n    {\n       store :  status ,\n       server :  b.mongodb.org ,\n       port : 27017,\n       database :  status_db ,\n       username :  admin ,\n       password :  3NCRYPT3D \n    }\n  ],\n   users : [\n    {\n       name :  cap ,\n       email :  cap@email.com ,\n       api_key :  C4PK3Y \n    },\n    {\n       name :  thor ,\n       email :  thor@email.com ,\n       api_key :  TH0RK3Y \n    }\n  ]\n}  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Tenant was succesfully created ,\n   code :  201 \n },\n  data : {\n   id :  {{ID}} ,\n   links : {\n    self :  https:///api/v2/admin/tenants/{{ID}} \n  }\n }\n}", 
            "title": "POST: Create a new Tenant"
        }, 
        {
            "location": "/tenants/#put-update-information-on-an-existing-tenant", 
            "text": "This method can be used to update information on an existing tenant  Input  PUT /admin/tenants/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  PUT BODY  {\n   info : {\n     name :  Tenant1 ,\n     email :  email1@tenant1.com ,\n     website :  www.tenant1.com ,\n     created :  2015-10-20 02:08:04 ,\n     updated :  2015-10-20 02:08:04 \n  },\n   db_conf : [\n    {\n       store :  ar ,\n       server :  a.mongodb.org ,\n       port : 27017,\n       database :  ar_db ,\n       username :  admin ,\n       password :  3NCRYPT3D \n    },\n    {\n       store :  status ,\n       server :  b.mongodb.org ,\n       port : 27017,\n       database :  status_db ,\n       username :  admin ,\n       password :  3NCRYPT3D \n    }\n  ],\n   users : [\n    {\n       name :  cap ,\n       email :  cap@email.com ,\n       api_key :  C4PK3Y \n    },\n    {\n       name :  thor ,\n       email :  thor@email.com ,\n       api_key :  TH0RK3Y \n    }\n  ]\n}  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Tenant successfully updated ,\n   code :  200 \n }\n}", 
            "title": "PUT: Update information on an existing tenant"
        }, 
        {
            "location": "/tenants/#delete-delete-an-existing-tenant", 
            "text": "This method can be used to delete an existing tenant  Input  DELETE /admin/tenants/{ID}  Request headers  x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json  Response  Headers:  Status: 200 OK  Response body  Json Response  {\n  status : {\n   message :  Tenant Successfully Deleted ,\n   code :  200 \n }\n}", 
            "title": "DELETE: Delete an existing tenant"
        }
    ]
}